(()=>{"use strict";var n={535:(n,e,t)=>{t.d(e,{A:()=>A});var r=t(354),o=t.n(r),a=t(314),i=t.n(a)()(o());i.push([n.id,".footer {\n    background-color:var(--primary-color);\n    color: white;\n    text-align: center;\n    padding: 1rem 0;\n    bottom: 0;\n    width: 100%;\n}","",{version:3,sources:["webpack://./src/components/Footer/Footer.css"],names:[],mappings:"AAAA;IACI,qCAAqC;IACrC,YAAY;IACZ,kBAAkB;IAClB,eAAe;IACf,SAAS;IACT,WAAW;AACf",sourcesContent:[".footer {\r\n    background-color:var(--primary-color);\r\n    color: white;\r\n    text-align: center;\r\n    padding: 1rem 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n}"],sourceRoot:""}]);const A=i},499:(n,e,t)=>{t.d(e,{A:()=>A});var r=t(354),o=t.n(r),a=t(314),i=t.n(a)()(o());i.push([n.id,"\n.header {\n  color: white;\n  text-align: center;\n  padding: 1rem;\n  font-family: var(--font-heading);\n  font-size: 28px;\n}\n\n.nav-tabs {\n  display: flex;\n  justify-content: center;\n  list-style: none;\n  padding: 0;\n  margin-top: 20px; /* Additional spacing */\n}\n\n.tab-button {\n  background: var(--accent-color);\n  border: 2px solid white; /* More prominent borders */\n  color: white;\n  padding: 10px 20px;\n  margin: 0 10px; /* Increase spacing */\n  cursor: pointer;\n  transition: all 0.3s ease;\n  font-size: 20px; /* Larger font size for readability */\n  border-radius: 10px; /* More pronounced rounding */\n  font-family: var(--font-heading);\n}\n\n.tab-button:hover, .tab-button.active {\n  background-color: var(--primary-color);\n  color: var(--background-color);\n  border-color: var(--accent-color); /* Changes border color on hover/active */\n}","",{version:3,sources:["webpack://./src/components/Header/Header.css"],names:[],mappings:";AACA;EACE,YAAY;EACZ,kBAAkB;EAClB,aAAa;EACb,gCAAgC;EAChC,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,gBAAgB;EAChB,UAAU;EACV,gBAAgB,EAAE,uBAAuB;AAC3C;;AAEA;EACE,+BAA+B;EAC/B,uBAAuB,EAAE,2BAA2B;EACpD,YAAY;EACZ,kBAAkB;EAClB,cAAc,EAAE,qBAAqB;EACrC,eAAe;EACf,yBAAyB;EACzB,eAAe,EAAE,qCAAqC;EACtD,mBAAmB,EAAE,6BAA6B;EAClD,gCAAgC;AAClC;;AAEA;EACE,sCAAsC;EACtC,8BAA8B;EAC9B,iCAAiC,EAAE,yCAAyC;AAC9E",sourcesContent:["\r\n.header {\r\n  color: white;\r\n  text-align: center;\r\n  padding: 1rem;\r\n  font-family: var(--font-heading);\r\n  font-size: 28px;\r\n}\r\n\r\n.nav-tabs {\r\n  display: flex;\r\n  justify-content: center;\r\n  list-style: none;\r\n  padding: 0;\r\n  margin-top: 20px; /* Additional spacing */\r\n}\r\n\r\n.tab-button {\r\n  background: var(--accent-color);\r\n  border: 2px solid white; /* More prominent borders */\r\n  color: white;\r\n  padding: 10px 20px;\r\n  margin: 0 10px; /* Increase spacing */\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  font-size: 20px; /* Larger font size for readability */\r\n  border-radius: 10px; /* More pronounced rounding */\r\n  font-family: var(--font-heading);\r\n}\r\n\r\n.tab-button:hover, .tab-button.active {\r\n  background-color: var(--primary-color);\r\n  color: var(--background-color);\r\n  border-color: var(--accent-color); /* Changes border color on hover/active */\r\n}"],sourceRoot:""}]);const A=i},993:(n,e,t)=>{t.d(e,{A:()=>u});var r=t(354),o=t.n(r),a=t(314),i=t.n(a),A=t(417),c=t.n(A),s=new URL(t(104),t.b),d=i()(o()),l=c()(s);d.push([n.id,`\n\n.homepage {\n    text-align: center;\n    padding: 0; /* Adjust padding as needed, or remove if unnecessary */\n    color: white; /* This ensures text stands out against a dark background */\n    background-image: url(${l}); /* Update path as needed */\n    background-size: cover;\n    background-position: center;\n    height: 100vh; /* This makes the element cover the full viewport height */\n    width: 100%; /* This ensures it covers the full viewport width */\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin: 0; /* Remove any default margin */\n}\n.homepage h1 {\n    margin: 0;\n    font-size: 2.5rem; /* Adjust size as needed */\n}\n.homepage-image {\n   width: 100vw; \n    height: 100vh;\n    border-radius: 8px; /* Adds rounded corners to the image */\n    object-fit: cover; /* Ensures the image covers the entire div */\n}\n`,"",{version:3,sources:["webpack://./src/components/HomePage/HomePage.css"],names:[],mappings:";;AAEA;IACI,kBAAkB;IAClB,UAAU,EAAE,uDAAuD;IACnE,YAAY,EAAE,2DAA2D;IACzE,yDAAoD,EAAE,0BAA0B;IAChF,sBAAsB;IACtB,2BAA2B;IAC3B,aAAa,EAAE,0DAA0D;IACzE,WAAW,EAAE,mDAAmD;IAChE,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,SAAS,EAAE,8BAA8B;AAC7C;AACA;IACI,SAAS;IACT,iBAAiB,EAAE,0BAA0B;AACjD;AACA;GACG,YAAY;IACX,aAAa;IACb,kBAAkB,EAAE,sCAAsC;IAC1D,iBAAiB,EAAE,4CAA4C;AACnE",sourcesContent:["\r\n\r\n.homepage {\r\n    text-align: center;\r\n    padding: 0; /* Adjust padding as needed, or remove if unnecessary */\r\n    color: white; /* This ensures text stands out against a dark background */\r\n    background-image: url('../../assets/restaurant.jpg'); /* Update path as needed */\r\n    background-size: cover;\r\n    background-position: center;\r\n    height: 100vh; /* This makes the element cover the full viewport height */\r\n    width: 100%; /* This ensures it covers the full viewport width */\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    margin: 0; /* Remove any default margin */\r\n}\r\n.homepage h1 {\r\n    margin: 0;\r\n    font-size: 2.5rem; /* Adjust size as needed */\r\n}\r\n.homepage-image {\r\n   width: 100vw; \r\n    height: 100vh;\r\n    border-radius: 8px; /* Adds rounded corners to the image */\r\n    object-fit: cover; /* Ensures the image covers the entire div */\r\n}\r\n"],sourceRoot:""}]);const u=d},422:(n,e,t)=>{t.d(e,{A:()=>f});var r=t(354),o=t.n(r),a=t(314),i=t.n(a),A=t(417),c=t.n(A),s=new URL(t(588),t.b),d=new URL(t(803),t.b),l=i()(o()),u=c()(s),p=c()(d);l.push([n.id,`@font-face {\n  font-family: 'Alba';\n  src: url(${u});\n  font-weight: normal;\n}\n\n@font-face {\n  font-family: 'AlbaS';\n  src: url(${p});\n  font-weight: normal;\n}\n\n:root {\n  --primary-color: #9ad3bc; /* Soft green */\n  --accent-color: #f3d1bf;  /* Warm peach */\n  --background-color: #f7f5e6; /* Light cream */\n  --text-color: #5a5a5a;    /* Soft dark grey */\n  --font-heading: 'Alba', cursive; \n  --font-body: 'AlbaS', sans-serif; \n}\nbody {\n    margin: 0;\n    padding: 0;\n    background-color: var(--background-color);\n    color: var(--text-color);\n    font-family: var(--font-body);\n}\n\n#app {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    overflow-x: hidden;\n    height: 100vh;\n}\n\n\nh1, h2, h3, h4, h5, h6 {\n    font-family: var(--font-heading);\n}\n\na {\n    color: var(--primary-color);\n    text-decoration: none; /* Remove underlines from links */\n}\n  /* Main Content Styles */\n  #main-content {\n    display: flex;\n  }\n`,"",{version:3,sources:["webpack://./src/global.css"],names:[],mappings:"AAAA;EACE,mBAAmB;EACnB,4CAAiC;EACjC,mBAAmB;AACrB;;AAEA;EACE,oBAAoB;EACpB,4CAAkC;EAClC,mBAAmB;AACrB;;AAEA;EACE,wBAAwB,EAAE,eAAe;EACzC,uBAAuB,GAAG,eAAe;EACzC,2BAA2B,EAAE,gBAAgB;EAC7C,qBAAqB,KAAK,mBAAmB;EAC7C,+BAA+B;EAC/B,gCAAgC;AAClC;AACA;IACI,SAAS;IACT,UAAU;IACV,yCAAyC;IACzC,wBAAwB;IACxB,6BAA6B;AACjC;;AAEA;IACI,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,kBAAkB;IAClB,aAAa;AACjB;;;AAGA;IACI,gCAAgC;AACpC;;AAEA;IACI,2BAA2B;IAC3B,qBAAqB,EAAE,iCAAiC;AAC5D;EACE,wBAAwB;EACxB;IACE,aAAa;EACf",sourcesContent:["@font-face {\r\n  font-family: 'Alba';\r\n  src: url('../src/fonts/ALBA.ttf');\r\n  font-weight: normal;\r\n}\r\n\r\n@font-face {\r\n  font-family: 'AlbaS';\r\n  src: url('../src/fonts/ALBAS.ttf');\r\n  font-weight: normal;\r\n}\r\n\r\n:root {\r\n  --primary-color: #9ad3bc; /* Soft green */\r\n  --accent-color: #f3d1bf;  /* Warm peach */\r\n  --background-color: #f7f5e6; /* Light cream */\r\n  --text-color: #5a5a5a;    /* Soft dark grey */\r\n  --font-heading: 'Alba', cursive; \r\n  --font-body: 'AlbaS', sans-serif; \r\n}\r\nbody {\r\n    margin: 0;\r\n    padding: 0;\r\n    background-color: var(--background-color);\r\n    color: var(--text-color);\r\n    font-family: var(--font-body);\r\n}\r\n\r\n#app {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow-x: hidden;\r\n    height: 100vh;\r\n}\r\n\r\n\r\nh1, h2, h3, h4, h5, h6 {\r\n    font-family: var(--font-heading);\r\n}\r\n\r\na {\r\n    color: var(--primary-color);\r\n    text-decoration: none; /* Remove underlines from links */\r\n}\r\n  /* Main Content Styles */\r\n  #main-content {\r\n    display: flex;\r\n  }\r\n"],sourceRoot:""}]);const f=l},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},417:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],A=0;A<n.length;A++){var c=n[A],s=r.base?c[0]+r.base:c[0],d=a[s]||0,l="".concat(s," ").concat(d);a[s]=d+1;var u=t(l),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var f=o(p,r);r.byIndex=A,e.splice(A,0,{identifier:l,updater:f,references:1})}i.push(l)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var c=r(n,o),s=0;s<a.length;s++){var d=t(a[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=c}}},659:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},588:(n,e,t)=>{n.exports=t.p+"d598c3d670b01f4f8870.ttf"},803:(n,e,t)=>{n.exports=t.p+"1324869ef14adcd035ad.ttf"},104:(n,e,t)=>{n.exports=t.p+"ad43cd4fead0348d2557.jpg"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.p="/",t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(72),e=t.n(n),r=t(825),o=t.n(r),a=t(659),i=t.n(a),A=t(56),c=t.n(A),s=t(540),d=t.n(s),l=t(113),u=t.n(l),p=t(993),f={};f.styleTagTransform=u(),f.setAttributes=c(),f.insert=i().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=d(),e()(p.A,f),p.A&&p.A.locals&&p.A.locals;var m=t(104),v={activeTab:0,tabs:[{id:0,name:"Home",active:!0,content:function(){var n=document.createElement("div");n.classList.add("homepage"),n.style.backgroundImage="url(".concat(m,")");var e=document.createElement("h1");return e.textContent="Welcome to Our Restaurant",n.appendChild(e),n}},{id:1,name:"About",active:!1,content:function(){var n=document.createElement("div");n.classList.add("about");var e=document.createElement("p");return e.textContent="About us at: 123-456-7890",n.appendChild(e),n}},{id:2,name:"Contact",active:!1,content:function(){var n=document.createElement("div");n.classList.add("contact");var e=document.createElement("p");return e.textContent="Contact us at: 123-456-7890",n.appendChild(e),n}},{id:3,name:"Menu",active:!1,content:function(){var n=document.createElement("div");return n.classList.add("menu"),n.textContent="Menu",n}}]},C=function(){return v},h=function(n){if(Object.keys(n).forEach((function(e){v.hasOwnProperty(e)&&(v[e]=n[e])})),n.hasOwnProperty("activeTab")){var e=n.activeTab;v.activeTab=e,v.tabs.forEach((function(n){n.active=n.id===e}))}};function g(){var n=C(),e=n.tabs,t=n.activeTab;document.querySelectorAll(".tab-button").forEach((function(n,r){e[r].id===t?n.classList.add("active"):n.classList.remove("active")}))}function b(){var n=document.getElementById("main-content");n||((n=document.createElement("div")).id="main-content",n.classList.add("main-content"),app.appendChild(n));var e=C(),t=e.tabs[e.activeTab].content;n.innerHTML="",n.appendChild(t())}var E=t(499),B={};B.styleTagTransform=u(),B.setAttributes=c(),B.insert=i().bind(null,"head"),B.domAPI=o(),B.insertStyleElement=d(),e()(E.A,B),E.A&&E.A.locals&&E.A.locals;var y=t(535),x={};x.styleTagTransform=u(),x.setAttributes=c(),x.insert=i().bind(null,"head"),x.domAPI=o(),x.insertStyleElement=d(),e()(y.A,x),y.A&&y.A.locals&&y.A.locals;var I=t(422),w={};w.styleTagTransform=u(),w.setAttributes=c(),w.insert=i().bind(null,"head"),w.domAPI=o(),w.insertStyleElement=d(),e()(I.A,w),I.A&&I.A.locals&&I.A.locals;var k,T=document.getElementById("app");T.innerHTML="",T.appendChild(function(){var n=C().tabs,e=document.createElement("header");e.classList.add("header");var t=document.createElement("nav");return t.classList.add("nav-tabs"),n.forEach((function(n){var e=document.createElement("button");e.textContent=n.name,e.classList.add("tab-button"),n.active&&e.classList.add("active"),e.addEventListener("click",(function(){h({activeTab:n.id}),g(),b()})),t.appendChild(e)})),e.appendChild(t),e}()),k=C().activeTab,h({activeTab:k}),g(),b(),T.appendChild(function(){var n=document.createElement("footer");n.classList.add("footer");var e=document.createElement("p");return e.textContent="© 2024 Restaurant Page. All rights reserved.",n.appendChild(e),n}())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,