(()=>{"use strict";var n={535:(n,e,t)=>{t.d(e,{A:()=>A});var r=t(354),o=t.n(r),a=t(314),i=t.n(a)()(o());i.push([n.id,".footer {\n    background-color:var(--primary-color);\n    color: white;\n    text-align: center;\n    padding: 1rem 0;\n    bottom: 0;\n    width: 100%;\n}","",{version:3,sources:["webpack://./src/components/Footer/Footer.css"],names:[],mappings:"AAAA;IACI,qCAAqC;IACrC,YAAY;IACZ,kBAAkB;IAClB,eAAe;IACf,SAAS;IACT,WAAW;AACf",sourcesContent:[".footer {\r\n    background-color:var(--primary-color);\r\n    color: white;\r\n    text-align: center;\r\n    padding: 1rem 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n}"],sourceRoot:""}]);const A=i},499:(n,e,t)=>{t.d(e,{A:()=>A});var r=t(354),o=t.n(r),a=t(314),i=t.n(a)()(o());i.push([n.id,"\n.header {\n  color: white;\n  text-align: center;\n  padding: 1rem;\n  font-family: var(--font-heading);\n  font-size: 28px;\n}\n\n.nav-tabs {\n  display: flex;\n  justify-content: center;\n  list-style: none;\n  padding: 0;\n  margin-top: 20px; /* Additional spacing */\n}\n\n.tab-button {\n  background: var(--accent-color);\n  border: 2px solid white; /* More prominent borders */\n  color: white;\n  padding: 10px 20px;\n  margin: 0 10px; /* Increase spacing */\n  cursor: pointer;\n  transition: all 0.3s ease;\n  font-size: 20px; /* Larger font size for readability */\n  border-radius: 10px; /* More pronounced rounding */\n  font-family: var(--font-heading);\n}\n\n.tab-button:hover, .tab-button.active {\n  background-color: var(--primary-color);\n  color: var(--background-color);\n  border-color: var(--accent-color); /* Changes border color on hover/active */\n}","",{version:3,sources:["webpack://./src/components/Header/Header.css"],names:[],mappings:";AACA;EACE,YAAY;EACZ,kBAAkB;EAClB,aAAa;EACb,gCAAgC;EAChC,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,gBAAgB;EAChB,UAAU;EACV,gBAAgB,EAAE,uBAAuB;AAC3C;;AAEA;EACE,+BAA+B;EAC/B,uBAAuB,EAAE,2BAA2B;EACpD,YAAY;EACZ,kBAAkB;EAClB,cAAc,EAAE,qBAAqB;EACrC,eAAe;EACf,yBAAyB;EACzB,eAAe,EAAE,qCAAqC;EACtD,mBAAmB,EAAE,6BAA6B;EAClD,gCAAgC;AAClC;;AAEA;EACE,sCAAsC;EACtC,8BAA8B;EAC9B,iCAAiC,EAAE,yCAAyC;AAC9E",sourcesContent:["\r\n.header {\r\n  color: white;\r\n  text-align: center;\r\n  padding: 1rem;\r\n  font-family: var(--font-heading);\r\n  font-size: 28px;\r\n}\r\n\r\n.nav-tabs {\r\n  display: flex;\r\n  justify-content: center;\r\n  list-style: none;\r\n  padding: 0;\r\n  margin-top: 20px; /* Additional spacing */\r\n}\r\n\r\n.tab-button {\r\n  background: var(--accent-color);\r\n  border: 2px solid white; /* More prominent borders */\r\n  color: white;\r\n  padding: 10px 20px;\r\n  margin: 0 10px; /* Increase spacing */\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  font-size: 20px; /* Larger font size for readability */\r\n  border-radius: 10px; /* More pronounced rounding */\r\n  font-family: var(--font-heading);\r\n}\r\n\r\n.tab-button:hover, .tab-button.active {\r\n  background-color: var(--primary-color);\r\n  color: var(--background-color);\r\n  border-color: var(--accent-color); /* Changes border color on hover/active */\r\n}"],sourceRoot:""}]);const A=i},993:(n,e,t)=>{t.d(e,{A:()=>u});var r=t(354),o=t.n(r),a=t(314),i=t.n(a),A=t(417),c=t.n(A),s=new URL(t(728),t.b),d=i()(o()),l=c()(s);d.push([n.id,`\n\n.homepage {\n    text-align: center;\n    padding: 0; /* Adjust padding as needed, or remove if unnecessary */\n    color: white; /* This ensures text stands out against a dark background */\n    background-image: url(${l}); /* Update path as needed */\n    background-size: cover;\n    background-position: center;\n    height: 100vh; /* This makes the element cover the full viewport height */\n    width: 100%; /* This ensures it covers the full viewport width */\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin: 0; /* Remove any default margin */\n}\n.homepage h1 {\n    margin: 0;\n    font-size: 2.5rem; /* Adjust size as needed */\n}\n.homepage-image {\n   width: 100vw; \n    height: 100vh;\n    border-radius: 8px; /* Adds rounded corners to the image */\n    object-fit: cover; /* Ensures the image covers the entire div */\n}\n`,"",{version:3,sources:["webpack://./src/components/HomePage/HomePage.css"],names:[],mappings:";;AAEA;IACI,kBAAkB;IAClB,UAAU,EAAE,uDAAuD;IACnE,YAAY,EAAE,2DAA2D;IACzE,yDAAoD,EAAE,0BAA0B;IAChF,sBAAsB;IACtB,2BAA2B;IAC3B,aAAa,EAAE,0DAA0D;IACzE,WAAW,EAAE,mDAAmD;IAChE,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,SAAS,EAAE,8BAA8B;AAC7C;AACA;IACI,SAAS;IACT,iBAAiB,EAAE,0BAA0B;AACjD;AACA;GACG,YAAY;IACX,aAAa;IACb,kBAAkB,EAAE,sCAAsC;IAC1D,iBAAiB,EAAE,4CAA4C;AACnE",sourcesContent:["\r\n\r\n.homepage {\r\n    text-align: center;\r\n    padding: 0; /* Adjust padding as needed, or remove if unnecessary */\r\n    color: white; /* This ensures text stands out against a dark background */\r\n    background-image: url('../../assets/restaurant.jpg'); /* Update path as needed */\r\n    background-size: cover;\r\n    background-position: center;\r\n    height: 100vh; /* This makes the element cover the full viewport height */\r\n    width: 100%; /* This ensures it covers the full viewport width */\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    margin: 0; /* Remove any default margin */\r\n}\r\n.homepage h1 {\r\n    margin: 0;\r\n    font-size: 2.5rem; /* Adjust size as needed */\r\n}\r\n.homepage-image {\r\n   width: 100vw; \r\n    height: 100vh;\r\n    border-radius: 8px; /* Adds rounded corners to the image */\r\n    object-fit: cover; /* Ensures the image covers the entire div */\r\n}\r\n"],sourceRoot:""}]);const u=d},422:(n,e,t)=>{t.d(e,{A:()=>f});var r=t(354),o=t.n(r),a=t(314),i=t.n(a),A=t(417),c=t.n(A),s=new URL(t(588),t.b),d=new URL(t(803),t.b),l=i()(o()),u=c()(s),p=c()(d);l.push([n.id,`@font-face {\n  font-family: 'Alba';\n  src: url(${u});\n  font-weight: normal;\n}\n\n@font-face {\n  font-family: 'AlbaS';\n  src: url(${p});\n  font-weight: normal;\n}\n\n:root {\n  --primary-color: #9ad3bc; /* Soft green */\n  --accent-color: #f3d1bf;  /* Warm peach */\n  --background-color: #f7f5e6; /* Light cream */\n  --text-color: #5a5a5a;    /* Soft dark grey */\n  --font-heading: 'Alba', cursive; \n  --font-body: 'AlbaS', sans-serif; \n}\nbody {\n    margin: 0;\n    padding: 0;\n    background-color: var(--background-color);\n    color: var(--text-color);\n    font-family: var(--font-body);\n}\n\n#app {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    overflow-x: hidden;\n    height: 100vh;\n}\n\n\nh1, h2, h3, h4, h5, h6 {\n    font-family: var(--font-heading);\n}\n\na {\n    color: var(--primary-color);\n    text-decoration: none; /* Remove underlines from links */\n}\n  /* Main Content Styles */\n  #main-content {\n    display: flex;\n  }\n`,"",{version:3,sources:["webpack://./src/global.css"],names:[],mappings:"AAAA;EACE,mBAAmB;EACnB,4CAAiC;EACjC,mBAAmB;AACrB;;AAEA;EACE,oBAAoB;EACpB,4CAAkC;EAClC,mBAAmB;AACrB;;AAEA;EACE,wBAAwB,EAAE,eAAe;EACzC,uBAAuB,GAAG,eAAe;EACzC,2BAA2B,EAAE,gBAAgB;EAC7C,qBAAqB,KAAK,mBAAmB;EAC7C,+BAA+B;EAC/B,gCAAgC;AAClC;AACA;IACI,SAAS;IACT,UAAU;IACV,yCAAyC;IACzC,wBAAwB;IACxB,6BAA6B;AACjC;;AAEA;IACI,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,kBAAkB;IAClB,aAAa;AACjB;;;AAGA;IACI,gCAAgC;AACpC;;AAEA;IACI,2BAA2B;IAC3B,qBAAqB,EAAE,iCAAiC;AAC5D;EACE,wBAAwB;EACxB;IACE,aAAa;EACf",sourcesContent:["@font-face {\r\n  font-family: 'Alba';\r\n  src: url('../src/fonts/ALBA.ttf');\r\n  font-weight: normal;\r\n}\r\n\r\n@font-face {\r\n  font-family: 'AlbaS';\r\n  src: url('../src/fonts/ALBAS.ttf');\r\n  font-weight: normal;\r\n}\r\n\r\n:root {\r\n  --primary-color: #9ad3bc; /* Soft green */\r\n  --accent-color: #f3d1bf;  /* Warm peach */\r\n  --background-color: #f7f5e6; /* Light cream */\r\n  --text-color: #5a5a5a;    /* Soft dark grey */\r\n  --font-heading: 'Alba', cursive; \r\n  --font-body: 'AlbaS', sans-serif; \r\n}\r\nbody {\r\n    margin: 0;\r\n    padding: 0;\r\n    background-color: var(--background-color);\r\n    color: var(--text-color);\r\n    font-family: var(--font-body);\r\n}\r\n\r\n#app {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow-x: hidden;\r\n    height: 100vh;\r\n}\r\n\r\n\r\nh1, h2, h3, h4, h5, h6 {\r\n    font-family: var(--font-heading);\r\n}\r\n\r\na {\r\n    color: var(--primary-color);\r\n    text-decoration: none; /* Remove underlines from links */\r\n}\r\n  /* Main Content Styles */\r\n  #main-content {\r\n    display: flex;\r\n  }\r\n"],sourceRoot:""}]);const f=l},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},417:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],A=0;A<n.length;A++){var c=n[A],s=r.base?c[0]+r.base:c[0],d=a[s]||0,l="".concat(s," ").concat(d);a[s]=d+1;var u=t(l),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var f=o(p,r);r.byIndex=A,e.splice(A,0,{identifier:l,updater:f,references:1})}i.push(l)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var c=r(n,o),s=0;s<a.length;s++){var d=t(a[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=c}}},659:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},728:(n,e,t)=>{n.exports=t.p+"07356911e33512f60b70.jpg"},588:(n,e,t)=>{n.exports=t.p+"d598c3d670b01f4f8870.ttf"},803:(n,e,t)=>{n.exports=t.p+"1324869ef14adcd035ad.ttf"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.p="/",t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(72),e=t.n(n),r=t(825),o=t.n(r),a=t(659),i=t.n(a),A=t(56),c=t.n(A),s=t(540),d=t.n(s),l=t(113),u=t.n(l),p=t(993),f={};f.styleTagTransform=u(),f.setAttributes=c(),f.insert=i().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=d(),e()(p.A,f),p.A&&p.A.locals&&p.A.locals;var m={activeTab:0,tabs:[{id:0,name:"Home",active:!0,content:function(){var n=document.createElement("div");n.classList.add("homepage"),n.style.backgroundImage="url(".concat("assets/restaurant.jpg",")");var e=document.createElement("h1");return e.textContent="Welcome to Our Restaurant",n.appendChild(e),n}},{id:1,name:"About",active:!1,content:function(){var n=document.createElement("div");n.classList.add("about");var e=document.createElement("p");return e.textContent="About us at: 123-456-7890",n.appendChild(e),n}},{id:2,name:"Contact",active:!1,content:function(){var n=document.createElement("div");n.classList.add("contact");var e=document.createElement("p");return e.textContent="Contact us at: 123-456-7890",n.appendChild(e),n}},{id:3,name:"Menu",active:!1,content:function(){var n=document.createElement("div");return n.classList.add("menu"),n.textContent="Menu",n}}]},v=function(){return m},C=function(n){if(Object.keys(n).forEach((function(e){m.hasOwnProperty(e)&&(m[e]=n[e])})),n.hasOwnProperty("activeTab")){var e=n.activeTab;m.activeTab=e,m.tabs.forEach((function(n){n.active=n.id===e}))}};function h(){var n=v(),e=n.tabs,t=n.activeTab;document.querySelectorAll(".tab-button").forEach((function(n,r){e[r].id===t?n.classList.add("active"):n.classList.remove("active")}))}function g(){var n=document.getElementById("main-content");n||((n=document.createElement("div")).id="main-content",n.classList.add("main-content"),app.appendChild(n));var e=v(),t=e.tabs[e.activeTab].content;n.innerHTML="",n.appendChild(t())}var b=t(499),E={};E.styleTagTransform=u(),E.setAttributes=c(),E.insert=i().bind(null,"head"),E.domAPI=o(),E.insertStyleElement=d(),e()(b.A,E),b.A&&b.A.locals&&b.A.locals;var B=t(535),y={};y.styleTagTransform=u(),y.setAttributes=c(),y.insert=i().bind(null,"head"),y.domAPI=o(),y.insertStyleElement=d(),e()(B.A,y),B.A&&B.A.locals&&B.A.locals;var x=t(422),I={};I.styleTagTransform=u(),I.setAttributes=c(),I.insert=i().bind(null,"head"),I.domAPI=o(),I.insertStyleElement=d(),e()(x.A,I),x.A&&x.A.locals&&x.A.locals;var w,k=document.getElementById("app");k.innerHTML="",k.appendChild(function(){var n=v().tabs,e=document.createElement("header");e.classList.add("header");var t=document.createElement("nav");return t.classList.add("nav-tabs"),n.forEach((function(n){var e=document.createElement("button");e.textContent=n.name,e.classList.add("tab-button"),n.active&&e.classList.add("active"),e.addEventListener("click",(function(){C({activeTab:n.id}),h(),g()})),t.appendChild(e)})),e.appendChild(t),e}()),w=v().activeTab,C({activeTab:w}),h(),g(),k.appendChild(function(){var n=document.createElement("footer");n.classList.add("footer");var e=document.createElement("p");return e.textContent="© 2024 Restaurant Page. All rights reserved.",n.appendChild(e),n}())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguYnVuZGxlLmpzIiwibWFwcGluZ3MiOiJ3RkFHSUEsRSxNQUEwQixHQUE0QixLQUUxREEsRUFBd0JDLEtBQUssQ0FBQ0MsRUFBT0MsR0FBSSwrSkFPckMsR0FBRyxDQUFDLFFBQVUsRUFBRSxRQUFVLENBQUMsZ0RBQWdELE1BQVEsR0FBRyxTQUFXLDhFQUE4RSxlQUFpQixDQUFDLDhLQUE4SyxXQUFhLE1BRWhZLFMsZ0VDWElILEUsTUFBMEIsR0FBNEIsS0FFMURBLEVBQXdCQyxLQUFLLENBQUNDLEVBQU9DLEdBQUksKzJCQWtDckMsR0FBRyxDQUFDLFFBQVUsRUFBRSxRQUFVLENBQUMsZ0RBQWdELE1BQVEsR0FBRyxTQUFXLHlZQUF5WSxlQUFpQixDQUFDLG83QkFBbzdCLFdBQWEsTUFFajhDLFMsMkZDckNJQyxFQUFnQyxJQUFJQyxJQUFJLFlBQ3hDTCxFQUEwQixJQUE0QixLQUN0RE0sRUFBcUMsSUFBZ0NGLEdBRXpFSixFQUF3QkMsS0FBSyxDQUFDQyxFQUFPQyxHQUFJLGlPQU1iRyx1cEJBb0J6QixHQUFHLENBQUMsUUFBVSxFQUFFLFFBQVUsQ0FBQyxvREFBb0QsTUFBUSxHQUFHLFNBQVcsa1dBQWtXLGVBQWlCLENBQUMsczhCQUFzOEIsV0FBYSxNQUUvNkMsUywyRkNoQ0lGLEVBQWdDLElBQUlDLElBQUksWUFDeENFLEVBQWdDLElBQUlGLElBQUksWUFDeENMLEVBQTBCLElBQTRCLEtBQ3RETSxFQUFxQyxJQUFnQ0YsR0FDckVJLEVBQXFDLElBQWdDRCxHQUV6RVAsRUFBd0JDLEtBQUssQ0FBQ0MsRUFBT0MsR0FBSSxvREFFNUJHLHVGQU1BRSxzMkJBeUNWLEdBQUcsQ0FBQyxRQUFVLEVBQUUsUUFBVSxDQUFDLDhCQUE4QixNQUFRLEdBQUcsU0FBVyxvZUFBb2UsZUFBaUIsQ0FBQywybkNBQTJuQyxXQUFhLE1BRWh0RCxTLFVDdkRBTixFQUFPTyxRQUFVLFNBQVVDLEdBQ3pCLElBQUlDLEVBQU8sR0E0RVgsT0F6RUFBLEVBQUtDLFNBQVcsV0FDZCxPQUFPQyxLQUFLQyxLQUFJLFNBQVVDLEdBQ3hCLElBQUlDLEVBQVUsR0FDVkMsT0FBK0IsSUFBWkYsRUFBSyxHQW9CNUIsT0FuQklBLEVBQUssS0FDUEMsR0FBVyxjQUFjRSxPQUFPSCxFQUFLLEdBQUksUUFFdkNBLEVBQUssS0FDUEMsR0FBVyxVQUFVRSxPQUFPSCxFQUFLLEdBQUksT0FFbkNFLElBQ0ZELEdBQVcsU0FBU0UsT0FBT0gsRUFBSyxHQUFHSSxPQUFTLEVBQUksSUFBSUQsT0FBT0gsRUFBSyxJQUFNLEdBQUksT0FFNUVDLEdBQVdOLEVBQXVCSyxHQUM5QkUsSUFDRkQsR0FBVyxLQUVURCxFQUFLLEtBQ1BDLEdBQVcsS0FFVEQsRUFBSyxLQUNQQyxHQUFXLEtBRU5BLENBQ1QsSUFBR0ksS0FBSyxHQUNWLEVBR0FULEVBQUtVLEVBQUksU0FBV0MsRUFBU0MsRUFBT0MsRUFBUUMsRUFBVUMsR0FDN0IsaUJBQVpKLElBQ1RBLEVBQVUsQ0FBQyxDQUFDLEtBQU1BLE9BQVNLLEtBRTdCLElBQUlDLEVBQXlCLENBQUMsRUFDOUIsR0FBSUosRUFDRixJQUFLLElBQUlLLEVBQUksRUFBR0EsRUFBSWhCLEtBQUtNLE9BQVFVLElBQUssQ0FDcEMsSUFBSTFCLEVBQUtVLEtBQUtnQixHQUFHLEdBQ1AsTUFBTjFCLElBQ0Z5QixFQUF1QnpCLElBQU0sRUFFakMsQ0FFRixJQUFLLElBQUkyQixFQUFLLEVBQUdBLEVBQUtSLEVBQVFILE9BQVFXLElBQU0sQ0FDMUMsSUFBSWYsRUFBTyxHQUFHRyxPQUFPSSxFQUFRUSxJQUN6Qk4sR0FBVUksRUFBdUJiLEVBQUssV0FHckIsSUFBVlcsU0FDYyxJQUFaWCxFQUFLLEtBR2RBLEVBQUssR0FBSyxTQUFTRyxPQUFPSCxFQUFLLEdBQUdJLE9BQVMsRUFBSSxJQUFJRCxPQUFPSCxFQUFLLElBQU0sR0FBSSxNQUFNRyxPQUFPSCxFQUFLLEdBQUksTUFGL0ZBLEVBQUssR0FBS1csR0FNVkgsSUFDR1IsRUFBSyxJQUdSQSxFQUFLLEdBQUssVUFBVUcsT0FBT0gsRUFBSyxHQUFJLE1BQU1HLE9BQU9ILEVBQUssR0FBSSxLQUMxREEsRUFBSyxHQUFLUSxHQUhWUixFQUFLLEdBQUtRLEdBTVZFLElBQ0dWLEVBQUssSUFHUkEsRUFBSyxHQUFLLGNBQWNHLE9BQU9ILEVBQUssR0FBSSxPQUFPRyxPQUFPSCxFQUFLLEdBQUksS0FDL0RBLEVBQUssR0FBS1UsR0FIVlYsRUFBSyxHQUFLLEdBQUdHLE9BQU9PLElBTXhCZCxFQUFLVixLQUFLYyxHQUNaLENBQ0YsRUFDT0osQ0FDVCxDLFVDbEZBVCxFQUFPTyxRQUFVLFNBQVVzQixFQUFLQyxHQUk5QixPQUhLQSxJQUNIQSxFQUFVLENBQUMsR0FFUkQsR0FHTEEsRUFBTUUsT0FBT0YsRUFBSUcsV0FBYUgsRUFBSUksUUFBVUosR0FHeEMsZUFBZUssS0FBS0wsS0FDdEJBLEVBQU1BLEVBQUlNLE1BQU0sR0FBSSxJQUVsQkwsRUFBUU0sT0FDVlAsR0FBT0MsRUFBUU0sTUFLYixvQkFBb0JGLEtBQUtMLElBQVFDLEVBQVFPLFdBQ3BDLElBQUtyQixPQUFPYSxFQUFJUyxRQUFRLEtBQU0sT0FBT0EsUUFBUSxNQUFPLE9BQVEsS0FFOURULEdBakJFQSxDQWtCWCxDLFVDdkJBN0IsRUFBT08sUUFBVSxTQUFVTSxHQUN6QixJQUFJQyxFQUFVRCxFQUFLLEdBQ2YwQixFQUFhMUIsRUFBSyxHQUN0QixJQUFLMEIsRUFDSCxPQUFPekIsRUFFVCxHQUFvQixtQkFBVDBCLEtBQXFCLENBQzlCLElBQUlDLEVBQVNELEtBQUtFLFNBQVNDLG1CQUFtQkMsS0FBS0MsVUFBVU4sTUFDekRPLEVBQU8sK0RBQStEOUIsT0FBT3lCLEdBQzdFTSxFQUFnQixPQUFPL0IsT0FBTzhCLEVBQU0sT0FDeEMsTUFBTyxDQUFDaEMsR0FBU0UsT0FBTyxDQUFDK0IsSUFBZ0I3QixLQUFLLEtBQ2hELENBQ0EsTUFBTyxDQUFDSixHQUFTSSxLQUFLLEtBQ3hCLEMsU0NiQSxJQUFJOEIsRUFBYyxHQUNsQixTQUFTQyxFQUFxQkMsR0FFNUIsSUFEQSxJQUFJQyxHQUFVLEVBQ0xoQyxFQUFJLEVBQUdBLEVBQUk2QixFQUFZL0IsT0FBUUUsSUFDdEMsR0FBSTZCLEVBQVk3QixHQUFHK0IsYUFBZUEsRUFBWSxDQUM1Q0MsRUFBU2hDLEVBQ1QsS0FDRixDQUVGLE9BQU9nQyxDQUNULENBQ0EsU0FBU0MsRUFBYTNDLEVBQU1xQixHQUcxQixJQUZBLElBQUl1QixFQUFhLENBQUMsRUFDZEMsRUFBYyxHQUNUbkMsRUFBSSxFQUFHQSxFQUFJVixFQUFLUSxPQUFRRSxJQUFLLENBQ3BDLElBQUlOLEVBQU9KLEVBQUtVLEdBQ1psQixFQUFLNkIsRUFBUXlCLEtBQU8xQyxFQUFLLEdBQUtpQixFQUFReUIsS0FBTzFDLEVBQUssR0FDbEQyQyxFQUFRSCxFQUFXcEQsSUFBTyxFQUMxQmlELEVBQWEsR0FBR2xDLE9BQU9mLEVBQUksS0FBS2UsT0FBT3dDLEdBQzNDSCxFQUFXcEQsR0FBTXVELEVBQVEsRUFDekIsSUFBSUMsRUFBb0JSLEVBQXFCQyxHQUN6Q1EsRUFBTSxDQUNSQyxJQUFLOUMsRUFBSyxHQUNWUSxNQUFPUixFQUFLLEdBQ1orQyxVQUFXL0MsRUFBSyxHQUNoQlUsU0FBVVYsRUFBSyxHQUNmVyxNQUFPWCxFQUFLLElBRWQsSUFBMkIsSUFBdkI0QyxFQUNGVCxFQUFZUyxHQUFtQkksYUFDL0JiLEVBQVlTLEdBQW1CSyxRQUFRSixPQUNsQyxDQUNMLElBQUlJLEVBQVVDLEVBQWdCTCxFQUFLNUIsR0FDbkNBLEVBQVFrQyxRQUFVN0MsRUFDbEI2QixFQUFZaUIsT0FBTzlDLEVBQUcsRUFBRyxDQUN2QitCLFdBQVlBLEVBQ1pZLFFBQVNBLEVBQ1RELFdBQVksR0FFaEIsQ0FDQVAsRUFBWXZELEtBQUttRCxFQUNuQixDQUNBLE9BQU9JLENBQ1QsQ0FDQSxTQUFTUyxFQUFnQkwsRUFBSzVCLEdBQzVCLElBQUlvQyxFQUFNcEMsRUFBUXFDLE9BQU9yQyxHQVl6QixPQVhBb0MsRUFBSUUsT0FBT1YsR0FDRyxTQUFpQlcsR0FDN0IsR0FBSUEsRUFBUSxDQUNWLEdBQUlBLEVBQU9WLE1BQVFELEVBQUlDLEtBQU9VLEVBQU9oRCxRQUFVcUMsRUFBSXJDLE9BQVNnRCxFQUFPVCxZQUFjRixFQUFJRSxXQUFhUyxFQUFPOUMsV0FBYW1DLEVBQUluQyxVQUFZOEMsRUFBTzdDLFFBQVVrQyxFQUFJbEMsTUFDekosT0FFRjBDLEVBQUlFLE9BQU9WLEVBQU1XLEVBQ25CLE1BQ0VILEVBQUlJLFFBRVIsQ0FFRixDQUNBdEUsRUFBT08sUUFBVSxTQUFVRSxFQUFNcUIsR0FHL0IsSUFBSXlDLEVBQWtCbkIsRUFEdEIzQyxFQUFPQSxHQUFRLEdBRGZxQixFQUFVQSxHQUFXLENBQUMsR0FHdEIsT0FBTyxTQUFnQjBDLEdBQ3JCQSxFQUFVQSxHQUFXLEdBQ3JCLElBQUssSUFBSXJELEVBQUksRUFBR0EsRUFBSW9ELEVBQWdCdEQsT0FBUUUsSUFBSyxDQUMvQyxJQUNJc0QsRUFBUXhCLEVBREtzQixFQUFnQnBELElBRWpDNkIsRUFBWXlCLEdBQU9aLFlBQ3JCLENBRUEsSUFEQSxJQUFJYSxFQUFxQnRCLEVBQWFvQixFQUFTMUMsR0FDdEM2QyxFQUFLLEVBQUdBLEVBQUtKLEVBQWdCdEQsT0FBUTBELElBQU0sQ0FDbEQsSUFDSUMsRUFBUzNCLEVBREtzQixFQUFnQkksSUFFSyxJQUFuQzNCLEVBQVk0QixHQUFRZixhQUN0QmIsRUFBWTRCLEdBQVFkLFVBQ3BCZCxFQUFZaUIsT0FBT1csRUFBUSxHQUUvQixDQUNBTCxFQUFrQkcsQ0FDcEIsQ0FDRixDLFVDakZBLElBQUlHLEVBQU8sQ0FBQyxFQStCWjdFLEVBQU9PLFFBUFAsU0FBMEJ1RSxFQUFRQyxHQUNoQyxJQUFJQyxFQXRCTixTQUFtQkEsR0FDakIsUUFBNEIsSUFBakJILEVBQUtHLEdBQXlCLENBQ3ZDLElBQUlDLEVBQWNDLFNBQVNDLGNBQWNILEdBR3pDLEdBQUlJLE9BQU9DLG1CQUFxQkosYUFBdUJHLE9BQU9DLGtCQUM1RCxJQUdFSixFQUFjQSxFQUFZSyxnQkFBZ0JDLElBQzVDLENBQUUsTUFBT0MsR0FFUFAsRUFBYyxJQUNoQixDQUVGSixFQUFLRyxHQUFVQyxDQUNqQixDQUNBLE9BQU9KLEVBQUtHLEVBQ2QsQ0FJZVMsQ0FBVVgsR0FDdkIsSUFBS0UsRUFDSCxNQUFNLElBQUlVLE1BQU0sMkdBRWxCVixFQUFPVyxZQUFZWixFQUNyQixDLFVDdkJBL0UsRUFBT08sUUFOUCxTQUE0QnVCLEdBQzFCLElBQUk4RCxFQUFVVixTQUFTVyxjQUFjLFNBR3JDLE9BRkEvRCxFQUFRZ0UsY0FBY0YsRUFBUzlELEVBQVFpRSxZQUN2Q2pFLEVBQVFnRCxPQUFPYyxFQUFTOUQsRUFBUUEsU0FDekI4RCxDQUNULEMsZUNDQTVGLEVBQU9PLFFBTlAsU0FBd0N5RixHQUN0QyxJQUFJQyxFQUFtRCxLQUNuREEsR0FDRkQsRUFBYUUsYUFBYSxRQUFTRCxFQUV2QyxDLFVDb0RBakcsRUFBT08sUUFqQlAsU0FBZ0J1QixHQUNkLEdBQXdCLG9CQUFib0QsU0FDVCxNQUFPLENBQ0xkLE9BQVEsV0FBbUIsRUFDM0JFLE9BQVEsV0FBbUIsR0FHL0IsSUFBSTBCLEVBQWVsRSxFQUFRcUUsbUJBQW1CckUsR0FDOUMsTUFBTyxDQUNMc0MsT0FBUSxTQUFnQlYsSUFqRDVCLFNBQWVzQyxFQUFjbEUsRUFBUzRCLEdBQ3BDLElBQUlDLEVBQU0sR0FDTkQsRUFBSW5DLFdBQ05vQyxHQUFPLGNBQWMzQyxPQUFPMEMsRUFBSW5DLFNBQVUsUUFFeENtQyxFQUFJckMsUUFDTnNDLEdBQU8sVUFBVTNDLE9BQU8wQyxFQUFJckMsTUFBTyxPQUVyQyxJQUFJTixPQUFpQyxJQUFkMkMsRUFBSWxDLE1BQ3ZCVCxJQUNGNEMsR0FBTyxTQUFTM0MsT0FBTzBDLEVBQUlsQyxNQUFNUCxPQUFTLEVBQUksSUFBSUQsT0FBTzBDLEVBQUlsQyxPQUFTLEdBQUksT0FFNUVtQyxHQUFPRCxFQUFJQyxJQUNQNUMsSUFDRjRDLEdBQU8sS0FFTEQsRUFBSXJDLFFBQ05zQyxHQUFPLEtBRUxELEVBQUluQyxXQUNOb0MsR0FBTyxLQUVULElBQUlDLEVBQVlGLEVBQUlFLFVBQ2hCQSxHQUE2QixvQkFBVHBCLE9BQ3RCbUIsR0FBTyx1REFBdUQzQyxPQUFPd0IsS0FBS0UsU0FBU0MsbUJBQW1CQyxLQUFLQyxVQUFVZSxNQUFlLFFBS3RJOUIsRUFBUXNFLGtCQUFrQnpDLEVBQUtxQyxFQUFjbEUsRUFBUUEsUUFDdkQsQ0FvQk11RSxDQUFNTCxFQUFjbEUsRUFBUzRCLEVBQy9CLEVBQ0FZLE9BQVEsWUFyQlosU0FBNEIwQixHQUUxQixHQUFnQyxPQUE1QkEsRUFBYU0sV0FDZixPQUFPLEVBRVROLEVBQWFNLFdBQVdDLFlBQVlQLEVBQ3RDLENBZ0JNUSxDQUFtQlIsRUFDckIsRUFFSixDLFVDOUNBaEcsRUFBT08sUUFWUCxTQUEyQm9ELEVBQUtxQyxHQUM5QixHQUFJQSxFQUFhUyxXQUNmVCxFQUFhUyxXQUFXQyxRQUFVL0MsTUFDN0IsQ0FDTCxLQUFPcUMsRUFBYVcsWUFDbEJYLEVBQWFPLFlBQVlQLEVBQWFXLFlBRXhDWCxFQUFhTCxZQUFZVCxTQUFTMEIsZUFBZWpELEdBQ25ELENBQ0YsQywyS0NYSWtELEVBQTJCLENBQUMsRUFHaEMsU0FBU0MsRUFBb0JDLEdBRTVCLElBQUlDLEVBQWVILEVBQXlCRSxHQUM1QyxRQUFxQnRGLElBQWpCdUYsRUFDSCxPQUFPQSxFQUFhekcsUUFHckIsSUFBSVAsRUFBUzZHLEVBQXlCRSxHQUFZLENBQ2pEOUcsR0FBSThHLEVBRUp4RyxRQUFTLENBQUMsR0FPWCxPQUhBMEcsRUFBb0JGLEdBQVUvRyxFQUFRQSxFQUFPTyxRQUFTdUcsR0FHL0M5RyxFQUFPTyxPQUNmLENBR0F1RyxFQUFvQkksRUFBSUQsRUN4QnhCSCxFQUFvQkssRUFBS25ILElBQ3hCLElBQUlvSCxFQUFTcEgsR0FBVUEsRUFBT2dDLFdBQzdCLElBQU9oQyxFQUFpQixRQUN4QixJQUFNLEVBRVAsT0FEQThHLEVBQW9CTyxFQUFFRCxFQUFRLENBQUVFLEVBQUdGLElBQzVCQSxDQUFNLEVDTGROLEVBQW9CTyxFQUFJLENBQUM5RyxFQUFTZ0gsS0FDakMsSUFBSSxJQUFJQyxLQUFPRCxFQUNYVCxFQUFvQlcsRUFBRUYsRUFBWUMsS0FBU1YsRUFBb0JXLEVBQUVsSCxFQUFTaUgsSUFDNUVFLE9BQU9DLGVBQWVwSCxFQUFTaUgsRUFBSyxDQUFFSSxZQUFZLEVBQU1DLElBQUtOLEVBQVdDLElBRTFFLEVDTkRWLEVBQW9CVyxFQUFJLENBQUMvRCxFQUFLb0UsSUFBVUosT0FBT0ssVUFBVUMsZUFBZUMsS0FBS3ZFLEVBQUtvRSxHQ0FsRmhCLEVBQW9Cb0IsRUFBSSxJQ0F4QnBCLEVBQW9CcUIsRUFBSWpELFNBQVNrRCxTQUFXQyxLQUFLQyxTQUFTQyxLQ0ExRHpCLEVBQW9CMEIsUUFBSy9HLEUsNkhDV3JCSyxFQUFVLENBQUMsRUFFZkEsRUFBUXNFLGtCQUFvQixJQUM1QnRFLEVBQVFnRSxjQUFnQixJQUVsQmhFLEVBQVFnRCxPQUFTLFNBQWMsS0FBTSxRQUUzQ2hELEVBQVFxQyxPQUFTLElBQ2pCckMsRUFBUXFFLG1CQUFxQixJQUVoQixJQUFJLElBQVNyRSxHQUtKLEtBQVcsSUFBUTJHLFFBQVMsSUFBUUEsT0N0QjFELElBQU1DLEVBQVEsQ0FDVkMsVUFBVyxFQUNYQyxLQUFNLENBQ0osQ0FDRTNJLEdBQUksRUFDSjRJLEtBQU0sT0FDTkMsUUFBUSxFQUNSaEksUUNSUixXQUNJLElBQU1pSSxFQUFXN0QsU0FBU1csY0FBYyxPQUN4Q2tELEVBQVNDLFVBQVVDLElBQUksWUFDdkJGLEVBQVNoRSxNQUFNbUUsZ0JBQWtCLE9BQUhsSSxPQ05sQyx3QkRNMkQsS0FFdkQsSUFBTW1JLEVBQVVqRSxTQUFTVyxjQUFjLE1BS3ZDLE9BSkFzRCxFQUFRQyxZQUFjLDRCQUV0QkwsRUFBU3BELFlBQVl3RCxHQUVkSixDQUNYLEdERE0sQ0FDRTlJLEdBQUksRUFDSjRJLEtBQU0sUUFDTkMsUUFBUSxFQUNSaEksUUdqQlIsV0FDSSxJQUFNdUksRUFBUW5FLFNBQVNXLGNBQWMsT0FDckN3RCxFQUFNTCxVQUFVQyxJQUFJLFNBRXBCLElBQU1LLEVBQVlwRSxTQUFTVyxjQUFjLEtBS3pDLE9BSkF5RCxFQUFVRixZQUFjLDRCQUV4QkMsRUFBTTFELFlBQVkyRCxHQUVYRCxDQUNYLEdIU00sQ0FDRXBKLEdBQUksRUFDSjRJLEtBQU0sVUFDTkMsUUFBUSxFQUNSaEksUUl0QlIsV0FDSSxJQUFNeUksRUFBVXJFLFNBQVNXLGNBQWMsT0FDdkMwRCxFQUFRUCxVQUFVQyxJQUFJLFdBRXRCLElBQU1PLEVBQWN0RSxTQUFTVyxjQUFjLEtBSzNDLE9BSkEyRCxFQUFZSixZQUFjLDhCQUUxQkcsRUFBUTVELFlBQVk2RCxHQUViRCxDQUNYLEdKY00sQ0FDRXRKLEdBQUksRUFDSjRJLEtBQU0sT0FDTkMsUUFBUSxFQUNSaEksUUs1QlIsV0FDUSxJQUFNMkksRUFBT3ZFLFNBQVNXLGNBQWMsT0FHcEMsT0FGQTRELEVBQUtULFVBQVVDLElBQUksUUFDbkJRLEVBQUtMLFlBQWMsT0FDWkssQ0FDWCxLTDZCSUMsRUFBVyxXQUFILE9BQVNoQixDQUFLLEVBR3RCaUIsRUFBVyxTQUFDQyxHQVFoQixHQVBBbEMsT0FBT21DLEtBQUtELEdBQVVFLFNBQVEsU0FBQXRDLEdBQ3hCa0IsRUFBTVYsZUFBZVIsS0FDdkJrQixFQUFNbEIsR0FBT29DLEVBQVNwQyxHQUUxQixJQUdJb0MsRUFBUzVCLGVBQWUsYUFBYyxDQUN0QyxJQUFNK0IsRUFBaUJILEVBQVNqQixVQUdoQ0QsRUFBTUMsVUFBWW9CLEVBR2xCckIsRUFBTUUsS0FBS2tCLFNBQVEsU0FBQUUsR0FDakJBLEVBQUlsQixPQUFVa0IsRUFBSS9KLEtBQU84SixDQUMzQixHQUNGLENBQ0osRUFTQSxTQUFTRSxJQUNQLElBQUFDLEVBQTRCUixJQUFwQmQsRUFBSXNCLEVBQUp0QixLQUFNRCxFQUFTdUIsRUFBVHZCLFVBQ2R6RCxTQUFTaUYsaUJBQWlCLGVBQWVMLFNBQVEsU0FBQ00sRUFBUTNGLEdBQ3BEbUUsRUFBS25FLEdBQU94RSxLQUFPMEksRUFDckJ5QixFQUFPcEIsVUFBVUMsSUFBSSxVQUVyQm1CLEVBQU9wQixVQUFVMUUsT0FBTyxTQUU1QixHQUNGLENBR0EsU0FBUytGLElBQ1AsSUFBSUMsRUFBY3BGLFNBQVNxRixlQUFlLGdCQUVyQ0QsS0FDREEsRUFBY3BGLFNBQVNXLGNBQWMsUUFDekI1RixHQUFLLGVBQ2pCcUssRUFBWXRCLFVBQVVDLElBQUksZ0JBQzFCdUIsSUFBSTdFLFlBQVkyRSxJQUdwQixJQUFBRyxFQUE0QmYsSUFDdEJnQixFQURNRCxFQUFKN0IsS0FBZTZCLEVBQVQ5QixXQUMyQjdILFFBQ3pDd0osRUFBWUssVUFBWSxHQUN4QkwsRUFBWTNFLFlBQVkrRSxJQUM1QixDLGFNakZJLEVBQVUsQ0FBQyxFQUVmLEVBQVF0RSxrQkFBb0IsSUFDNUIsRUFBUU4sY0FBZ0IsSUFFbEIsRUFBUWhCLE9BQVMsU0FBYyxLQUFNLFFBRTNDLEVBQVFYLE9BQVMsSUFDakIsRUFBUWdDLG1CQUFxQixJQUVoQixJQUFJLElBQVMsR0FLSixLQUFXLElBQVFzQyxRQUFTLElBQVFBLE8sYUNmdEQsRUFBVSxDQUFDLEVBRWYsRUFBUXJDLGtCQUFvQixJQUM1QixFQUFRTixjQUFnQixJQUVsQixFQUFRaEIsT0FBUyxTQUFjLEtBQU0sUUFFM0MsRUFBUVgsT0FBUyxJQUNqQixFQUFRZ0MsbUJBQXFCLElBRWhCLElBQUksSUFBUyxHQUtKLEtBQVcsSUFBUXNDLFFBQVMsSUFBUUEsTyxhQ2Z0RCxFQUFVLENBQUMsRUFFZixFQUFRckMsa0JBQW9CLElBQzVCLEVBQVFOLGNBQWdCLElBRWxCLEVBQVFoQixPQUFTLFNBQWMsS0FBTSxRQUUzQyxFQUFRWCxPQUFTLElBQ2pCLEVBQVFnQyxtQkFBcUIsSUFFaEIsSUFBSSxJQUFTLEdBS0osS0FBVyxJQUFRc0MsUUFBUyxJQUFRQSxPQ3BCMUQsSVRxRHVCbUMsRVNyRGpCSixFQUFNdEYsU0FBU3FGLGVBQWUsT0FJbENDLEVBQUlHLFVBQVksR0FDaEJILEVBQUk3RSxZQ1JOLFdBQ0ksSUFBUWlELEVBQVNjLElBQVRkLEtBQ0ZpQyxFQUFTM0YsU0FBU1csY0FBYyxVQUN0Q2dGLEVBQU83QixVQUFVQyxJQUFJLFVBRXJCLElBQU02QixFQUFNNUYsU0FBU1csY0FBYyxPQWlCbkMsT0FoQkFpRixFQUFJOUIsVUFBVUMsSUFBSSxZQUVsQkwsRUFBS2tCLFNBQVEsU0FBQUUsR0FDWCxJQUFNSSxFQUFTbEYsU0FBU1csY0FBYyxVQUN0Q3VFLEVBQU9oQixZQUFjWSxFQUFJbkIsS0FDekJ1QixFQUFPcEIsVUFBVUMsSUFBSSxjQUNqQmUsRUFBSWxCLFFBQVFzQixFQUFPcEIsVUFBVUMsSUFBSSxVQUNyQ21CLEVBQU9XLGlCQUFpQixTQUFTLFdBQzdCcEIsRUFBUyxDQUFFaEIsVUFBV3FCLEVBQUkvSixLQUMxQmdLLElBQ0FJLEdBQ0osSUFDQVMsRUFBSW5GLFlBQVl5RSxFQUNwQixJQUVFUyxFQUFPbEYsWUFBWW1GLEdBQ1pELENBQ1gsQ0Rma0JHLElUZ0RLSixFUzlDVGxCLElBQVdmLFVUK0NyQmdCLEVBQVMsQ0FBRWhCLFVBQVdpQyxJQUN0QlgsSUFDQUksSVNoREZHLEVBQUk3RSxZRVBOLFdBQ0ksSUFBTXNGLEVBQVMvRixTQUFTVyxjQUFjLFVBQ3RDb0YsRUFBT2pDLFVBQVVDLElBQUksVUFFckIsSUFBTWlDLEVBQWFoRyxTQUFTVyxjQUFjLEtBSzFDLE9BSkFxRixFQUFXOUIsWUFBYywrQ0FFekI2QixFQUFPdEYsWUFBWXVGLEdBRVpELENBQ1gsQ0ZIa0JFLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50X3BhZ2UvLi9zcmMvY29tcG9uZW50cy9Gb290ZXIvRm9vdGVyLmNzcyIsIndlYnBhY2s6Ly9yZXN0YXVyYW50X3BhZ2UvLi9zcmMvY29tcG9uZW50cy9IZWFkZXIvSGVhZGVyLmNzcyIsIndlYnBhY2s6Ly9yZXN0YXVyYW50X3BhZ2UvLi9zcmMvY29tcG9uZW50cy9Ib21lUGFnZS9Ib21lUGFnZS5jc3MiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudF9wYWdlLy4vc3JjL2dsb2JhbC5jc3MiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudF9wYWdlLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9yZXN0YXVyYW50X3BhZ2UvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzIiwid2VicGFjazovL3Jlc3RhdXJhbnRfcGFnZS8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL3Jlc3RhdXJhbnRfcGFnZS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9yZXN0YXVyYW50X3BhZ2UvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3Jlc3RhdXJhbnRfcGFnZS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly9yZXN0YXVyYW50X3BhZ2UvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudF9wYWdlLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudF9wYWdlLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudF9wYWdlL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3Jlc3RhdXJhbnRfcGFnZS93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9yZXN0YXVyYW50X3BhZ2Uvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3Jlc3RhdXJhbnRfcGFnZS93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3Jlc3RhdXJhbnRfcGFnZS93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9yZXN0YXVyYW50X3BhZ2Uvd2VicGFjay9ydW50aW1lL2pzb25wIGNodW5rIGxvYWRpbmciLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudF9wYWdlL3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly9yZXN0YXVyYW50X3BhZ2UvLi9zcmMvY29tcG9uZW50cy9Ib21lUGFnZS9Ib21lUGFnZS5jc3M/ZTk5NyIsIndlYnBhY2s6Ly9yZXN0YXVyYW50X3BhZ2UvLi9zcmMvc3RvcmUuanMiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudF9wYWdlLy4vc3JjL2NvbXBvbmVudHMvSG9tZVBhZ2UvSG9tZVBhZ2UuanMiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudF9wYWdlLy4vc3JjL2Fzc2V0cy9yZXN0YXVyYW50LmpwZyIsIndlYnBhY2s6Ly9yZXN0YXVyYW50X3BhZ2UvLi9zcmMvY29tcG9uZW50cy9BYm91dC9BYm91dC5qcyIsIndlYnBhY2s6Ly9yZXN0YXVyYW50X3BhZ2UvLi9zcmMvY29tcG9uZW50cy9Db250YWN0L0NvbnRhY3QuanMiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudF9wYWdlLy4vc3JjL2NvbXBvbmVudHMvTWVudS9NZW51LmpzIiwid2VicGFjazovL3Jlc3RhdXJhbnRfcGFnZS8uL3NyYy9jb21wb25lbnRzL0hlYWRlci9IZWFkZXIuY3NzPzA1NWUiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudF9wYWdlLy4vc3JjL2NvbXBvbmVudHMvRm9vdGVyL0Zvb3Rlci5jc3M/M2U2OCIsIndlYnBhY2s6Ly9yZXN0YXVyYW50X3BhZ2UvLi9zcmMvZ2xvYmFsLmNzcz9kM2JjIiwid2VicGFjazovL3Jlc3RhdXJhbnRfcGFnZS8uL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly9yZXN0YXVyYW50X3BhZ2UvLi9zcmMvY29tcG9uZW50cy9IZWFkZXIvSGVhZGVyLmpzIiwid2VicGFjazovL3Jlc3RhdXJhbnRfcGFnZS8uL3NyYy9jb21wb25lbnRzL0Zvb3Rlci9Gb290ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYC5mb290ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjp2YXIoLS1wcmltYXJ5LWNvbG9yKTtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHBhZGRpbmc6IDFyZW0gMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvY29tcG9uZW50cy9Gb290ZXIvRm9vdGVyLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLHFDQUFxQztJQUNyQyxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixTQUFTO0lBQ1QsV0FBVztBQUNmXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5mb290ZXIge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLXByaW1hcnktY29sb3IpO1xcclxcbiAgICBjb2xvcjogd2hpdGU7XFxyXFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG4gICAgcGFkZGluZzogMXJlbSAwO1xcclxcbiAgICBib3R0b206IDA7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYFxyXG4uaGVhZGVyIHtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHBhZGRpbmc6IDFyZW07XHJcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtaGVhZGluZyk7XHJcbiAgZm9udC1zaXplOiAyOHB4O1xyXG59XHJcblxyXG4ubmF2LXRhYnMge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgbGlzdC1zdHlsZTogbm9uZTtcclxuICBwYWRkaW5nOiAwO1xyXG4gIG1hcmdpbi10b3A6IDIwcHg7IC8qIEFkZGl0aW9uYWwgc3BhY2luZyAqL1xyXG59XHJcblxyXG4udGFiLWJ1dHRvbiB7XHJcbiAgYmFja2dyb3VuZDogdmFyKC0tYWNjZW50LWNvbG9yKTtcclxuICBib3JkZXI6IDJweCBzb2xpZCB3aGl0ZTsgLyogTW9yZSBwcm9taW5lbnQgYm9yZGVycyAqL1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBwYWRkaW5nOiAxMHB4IDIwcHg7XHJcbiAgbWFyZ2luOiAwIDEwcHg7IC8qIEluY3JlYXNlIHNwYWNpbmcgKi9cclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcclxuICBmb250LXNpemU6IDIwcHg7IC8qIExhcmdlciBmb250IHNpemUgZm9yIHJlYWRhYmlsaXR5ICovXHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDsgLyogTW9yZSBwcm9ub3VuY2VkIHJvdW5kaW5nICovXHJcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtaGVhZGluZyk7XHJcbn1cclxuXHJcbi50YWItYnV0dG9uOmhvdmVyLCAudGFiLWJ1dHRvbi5hY3RpdmUge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXByaW1hcnktY29sb3IpO1xyXG4gIGNvbG9yOiB2YXIoLS1iYWNrZ3JvdW5kLWNvbG9yKTtcclxuICBib3JkZXItY29sb3I6IHZhcigtLWFjY2VudC1jb2xvcik7IC8qIENoYW5nZXMgYm9yZGVyIGNvbG9yIG9uIGhvdmVyL2FjdGl2ZSAqL1xyXG59YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvY29tcG9uZW50cy9IZWFkZXIvSGVhZGVyLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiO0FBQ0E7RUFDRSxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYixnQ0FBZ0M7RUFDaEMsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsZ0JBQWdCO0VBQ2hCLFVBQVU7RUFDVixnQkFBZ0IsRUFBRSx1QkFBdUI7QUFDM0M7O0FBRUE7RUFDRSwrQkFBK0I7RUFDL0IsdUJBQXVCLEVBQUUsMkJBQTJCO0VBQ3BELFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsY0FBYyxFQUFFLHFCQUFxQjtFQUNyQyxlQUFlO0VBQ2YseUJBQXlCO0VBQ3pCLGVBQWUsRUFBRSxxQ0FBcUM7RUFDdEQsbUJBQW1CLEVBQUUsNkJBQTZCO0VBQ2xELGdDQUFnQztBQUNsQzs7QUFFQTtFQUNFLHNDQUFzQztFQUN0Qyw4QkFBOEI7RUFDOUIsaUNBQWlDLEVBQUUseUNBQXlDO0FBQzlFXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIlxcclxcbi5oZWFkZXIge1xcclxcbiAgY29sb3I6IHdoaXRlO1xcclxcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgcGFkZGluZzogMXJlbTtcXHJcXG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWhlYWRpbmcpO1xcclxcbiAgZm9udC1zaXplOiAyOHB4O1xcclxcbn1cXHJcXG5cXHJcXG4ubmF2LXRhYnMge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbiAgbGlzdC1zdHlsZTogbm9uZTtcXHJcXG4gIHBhZGRpbmc6IDA7XFxyXFxuICBtYXJnaW4tdG9wOiAyMHB4OyAvKiBBZGRpdGlvbmFsIHNwYWNpbmcgKi9cXHJcXG59XFxyXFxuXFxyXFxuLnRhYi1idXR0b24ge1xcclxcbiAgYmFja2dyb3VuZDogdmFyKC0tYWNjZW50LWNvbG9yKTtcXHJcXG4gIGJvcmRlcjogMnB4IHNvbGlkIHdoaXRlOyAvKiBNb3JlIHByb21pbmVudCBib3JkZXJzICovXFxyXFxuICBjb2xvcjogd2hpdGU7XFxyXFxuICBwYWRkaW5nOiAxMHB4IDIwcHg7XFxyXFxuICBtYXJnaW46IDAgMTBweDsgLyogSW5jcmVhc2Ugc3BhY2luZyAqL1xcclxcbiAgY3Vyc29yOiBwb2ludGVyO1xcclxcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcXHJcXG4gIGZvbnQtc2l6ZTogMjBweDsgLyogTGFyZ2VyIGZvbnQgc2l6ZSBmb3IgcmVhZGFiaWxpdHkgKi9cXHJcXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7IC8qIE1vcmUgcHJvbm91bmNlZCByb3VuZGluZyAqL1xcclxcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtaGVhZGluZyk7XFxyXFxufVxcclxcblxcclxcbi50YWItYnV0dG9uOmhvdmVyLCAudGFiLWJ1dHRvbi5hY3RpdmUge1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeS1jb2xvcik7XFxyXFxuICBjb2xvcjogdmFyKC0tYmFja2dyb3VuZC1jb2xvcik7XFxyXFxuICBib3JkZXItY29sb3I6IHZhcigtLWFjY2VudC1jb2xvcik7IC8qIENoYW5nZXMgYm9yZGVyIGNvbG9yIG9uIGhvdmVyL2FjdGl2ZSAqL1xcclxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fID0gbmV3IFVSTChcIi4uLy4uL2Fzc2V0cy9yZXN0YXVyYW50LmpwZ1wiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgXHJcblxyXG4uaG9tZXBhZ2Uge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgcGFkZGluZzogMDsgLyogQWRqdXN0IHBhZGRpbmcgYXMgbmVlZGVkLCBvciByZW1vdmUgaWYgdW5uZWNlc3NhcnkgKi9cclxuICAgIGNvbG9yOiB3aGl0ZTsgLyogVGhpcyBlbnN1cmVzIHRleHQgc3RhbmRzIG91dCBhZ2FpbnN0IGEgZGFyayBiYWNrZ3JvdW5kICovXHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19ffSk7IC8qIFVwZGF0ZSBwYXRoIGFzIG5lZWRlZCAqL1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgIGhlaWdodDogMTAwdmg7IC8qIFRoaXMgbWFrZXMgdGhlIGVsZW1lbnQgY292ZXIgdGhlIGZ1bGwgdmlld3BvcnQgaGVpZ2h0ICovXHJcbiAgICB3aWR0aDogMTAwJTsgLyogVGhpcyBlbnN1cmVzIGl0IGNvdmVycyB0aGUgZnVsbCB2aWV3cG9ydCB3aWR0aCAqL1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIG1hcmdpbjogMDsgLyogUmVtb3ZlIGFueSBkZWZhdWx0IG1hcmdpbiAqL1xyXG59XHJcbi5ob21lcGFnZSBoMSB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBmb250LXNpemU6IDIuNXJlbTsgLyogQWRqdXN0IHNpemUgYXMgbmVlZGVkICovXHJcbn1cclxuLmhvbWVwYWdlLWltYWdlIHtcclxuICAgd2lkdGg6IDEwMHZ3OyBcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7IC8qIEFkZHMgcm91bmRlZCBjb3JuZXJzIHRvIHRoZSBpbWFnZSAqL1xyXG4gICAgb2JqZWN0LWZpdDogY292ZXI7IC8qIEVuc3VyZXMgdGhlIGltYWdlIGNvdmVycyB0aGUgZW50aXJlIGRpdiAqL1xyXG59XHJcbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2NvbXBvbmVudHMvSG9tZVBhZ2UvSG9tZVBhZ2UuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsVUFBVSxFQUFFLHVEQUF1RDtJQUNuRSxZQUFZLEVBQUUsMkRBQTJEO0lBQ3pFLHlEQUFvRCxFQUFFLDBCQUEwQjtJQUNoRixzQkFBc0I7SUFDdEIsMkJBQTJCO0lBQzNCLGFBQWEsRUFBRSwwREFBMEQ7SUFDekUsV0FBVyxFQUFFLG1EQUFtRDtJQUNoRSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLHVCQUF1QjtJQUN2QixTQUFTLEVBQUUsOEJBQThCO0FBQzdDO0FBQ0E7SUFDSSxTQUFTO0lBQ1QsaUJBQWlCLEVBQUUsMEJBQTBCO0FBQ2pEO0FBQ0E7R0FDRyxZQUFZO0lBQ1gsYUFBYTtJQUNiLGtCQUFrQixFQUFFLHNDQUFzQztJQUMxRCxpQkFBaUIsRUFBRSw0Q0FBNEM7QUFDbkVcIixcInNvdXJjZXNDb250ZW50XCI6W1wiXFxyXFxuXFxyXFxuLmhvbWVwYWdlIHtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgICBwYWRkaW5nOiAwOyAvKiBBZGp1c3QgcGFkZGluZyBhcyBuZWVkZWQsIG9yIHJlbW92ZSBpZiB1bm5lY2Vzc2FyeSAqL1xcclxcbiAgICBjb2xvcjogd2hpdGU7IC8qIFRoaXMgZW5zdXJlcyB0ZXh0IHN0YW5kcyBvdXQgYWdhaW5zdCBhIGRhcmsgYmFja2dyb3VuZCAqL1xcclxcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uLy4uL2Fzc2V0cy9yZXN0YXVyYW50LmpwZycpOyAvKiBVcGRhdGUgcGF0aCBhcyBuZWVkZWQgKi9cXHJcXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcXHJcXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xcclxcbiAgICBoZWlnaHQ6IDEwMHZoOyAvKiBUaGlzIG1ha2VzIHRoZSBlbGVtZW50IGNvdmVyIHRoZSBmdWxsIHZpZXdwb3J0IGhlaWdodCAqL1xcclxcbiAgICB3aWR0aDogMTAwJTsgLyogVGhpcyBlbnN1cmVzIGl0IGNvdmVycyB0aGUgZnVsbCB2aWV3cG9ydCB3aWR0aCAqL1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgbWFyZ2luOiAwOyAvKiBSZW1vdmUgYW55IGRlZmF1bHQgbWFyZ2luICovXFxyXFxufVxcclxcbi5ob21lcGFnZSBoMSB7XFxyXFxuICAgIG1hcmdpbjogMDtcXHJcXG4gICAgZm9udC1zaXplOiAyLjVyZW07IC8qIEFkanVzdCBzaXplIGFzIG5lZWRlZCAqL1xcclxcbn1cXHJcXG4uaG9tZXBhZ2UtaW1hZ2Uge1xcclxcbiAgIHdpZHRoOiAxMDB2dzsgXFxyXFxuICAgIGhlaWdodDogMTAwdmg7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDhweDsgLyogQWRkcyByb3VuZGVkIGNvcm5lcnMgdG8gdGhlIGltYWdlICovXFxyXFxuICAgIG9iamVjdC1maXQ6IGNvdmVyOyAvKiBFbnN1cmVzIHRoZSBpbWFnZSBjb3ZlcnMgdGhlIGVudGlyZSBkaXYgKi9cXHJcXG59XFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyA9IG5ldyBVUkwoXCIuLi9zcmMvZm9udHMvQUxCQS50dGZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMV9fXyA9IG5ldyBVUkwoXCIuLi9zcmMvZm9udHMvQUxCQVMudHRmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgQGZvbnQtZmFjZSB7XHJcbiAgZm9udC1mYW1pbHk6ICdBbGJhJztcclxuICBzcmM6IHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX199KTtcclxuICBmb250LXdlaWdodDogbm9ybWFsO1xyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuICBmb250LWZhbWlseTogJ0FsYmFTJztcclxuICBzcmM6IHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX199KTtcclxuICBmb250LXdlaWdodDogbm9ybWFsO1xyXG59XHJcblxyXG46cm9vdCB7XHJcbiAgLS1wcmltYXJ5LWNvbG9yOiAjOWFkM2JjOyAvKiBTb2Z0IGdyZWVuICovXHJcbiAgLS1hY2NlbnQtY29sb3I6ICNmM2QxYmY7ICAvKiBXYXJtIHBlYWNoICovXHJcbiAgLS1iYWNrZ3JvdW5kLWNvbG9yOiAjZjdmNWU2OyAvKiBMaWdodCBjcmVhbSAqL1xyXG4gIC0tdGV4dC1jb2xvcjogIzVhNWE1YTsgICAgLyogU29mdCBkYXJrIGdyZXkgKi9cclxuICAtLWZvbnQtaGVhZGluZzogJ0FsYmEnLCBjdXJzaXZlOyBcclxuICAtLWZvbnQtYm9keTogJ0FsYmFTJywgc2Fucy1zZXJpZjsgXHJcbn1cclxuYm9keSB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmFja2dyb3VuZC1jb2xvcik7XHJcbiAgICBjb2xvcjogdmFyKC0tdGV4dC1jb2xvcik7XHJcbiAgICBmb250LWZhbWlseTogdmFyKC0tZm9udC1ib2R5KTtcclxufVxyXG5cclxuI2FwcCB7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgb3ZlcmZsb3cteDogaGlkZGVuO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxufVxyXG5cclxuXHJcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xyXG4gICAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtaGVhZGluZyk7XHJcbn1cclxuXHJcbmEge1xyXG4gICAgY29sb3I6IHZhcigtLXByaW1hcnktY29sb3IpO1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyAvKiBSZW1vdmUgdW5kZXJsaW5lcyBmcm9tIGxpbmtzICovXHJcbn1cclxuICAvKiBNYWluIENvbnRlbnQgU3R5bGVzICovXHJcbiAgI21haW4tY29udGVudCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gIH1cclxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvZ2xvYmFsLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQiw0Q0FBaUM7RUFDakMsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0Usb0JBQW9CO0VBQ3BCLDRDQUFrQztFQUNsQyxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSx3QkFBd0IsRUFBRSxlQUFlO0VBQ3pDLHVCQUF1QixHQUFHLGVBQWU7RUFDekMsMkJBQTJCLEVBQUUsZ0JBQWdCO0VBQzdDLHFCQUFxQixLQUFLLG1CQUFtQjtFQUM3QywrQkFBK0I7RUFDL0IsZ0NBQWdDO0FBQ2xDO0FBQ0E7SUFDSSxTQUFTO0lBQ1QsVUFBVTtJQUNWLHlDQUF5QztJQUN6Qyx3QkFBd0I7SUFDeEIsNkJBQTZCO0FBQ2pDOztBQUVBO0lBQ0ksc0JBQXNCO0lBQ3RCLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLGFBQWE7QUFDakI7OztBQUdBO0lBQ0ksZ0NBQWdDO0FBQ3BDOztBQUVBO0lBQ0ksMkJBQTJCO0lBQzNCLHFCQUFxQixFQUFFLGlDQUFpQztBQUM1RDtFQUNFLHdCQUF3QjtFQUN4QjtJQUNFLGFBQWE7RUFDZlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAZm9udC1mYWNlIHtcXHJcXG4gIGZvbnQtZmFtaWx5OiAnQWxiYSc7XFxyXFxuICBzcmM6IHVybCgnLi4vc3JjL2ZvbnRzL0FMQkEudHRmJyk7XFxyXFxuICBmb250LXdlaWdodDogbm9ybWFsO1xcclxcbn1cXHJcXG5cXHJcXG5AZm9udC1mYWNlIHtcXHJcXG4gIGZvbnQtZmFtaWx5OiAnQWxiYVMnO1xcclxcbiAgc3JjOiB1cmwoJy4uL3NyYy9mb250cy9BTEJBUy50dGYnKTtcXHJcXG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XFxyXFxufVxcclxcblxcclxcbjpyb290IHtcXHJcXG4gIC0tcHJpbWFyeS1jb2xvcjogIzlhZDNiYzsgLyogU29mdCBncmVlbiAqL1xcclxcbiAgLS1hY2NlbnQtY29sb3I6ICNmM2QxYmY7ICAvKiBXYXJtIHBlYWNoICovXFxyXFxuICAtLWJhY2tncm91bmQtY29sb3I6ICNmN2Y1ZTY7IC8qIExpZ2h0IGNyZWFtICovXFxyXFxuICAtLXRleHQtY29sb3I6ICM1YTVhNWE7ICAgIC8qIFNvZnQgZGFyayBncmV5ICovXFxyXFxuICAtLWZvbnQtaGVhZGluZzogJ0FsYmEnLCBjdXJzaXZlOyBcXHJcXG4gIC0tZm9udC1ib2R5OiAnQWxiYVMnLCBzYW5zLXNlcmlmOyBcXHJcXG59XFxyXFxuYm9keSB7XFxyXFxuICAgIG1hcmdpbjogMDtcXHJcXG4gICAgcGFkZGluZzogMDtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmFja2dyb3VuZC1jb2xvcik7XFxyXFxuICAgIGNvbG9yOiB2YXIoLS10ZXh0LWNvbG9yKTtcXHJcXG4gICAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtYm9keSk7XFxyXFxufVxcclxcblxcclxcbiNhcHAge1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgb3ZlcmZsb3cteDogaGlkZGVuO1xcclxcbiAgICBoZWlnaHQ6IDEwMHZoO1xcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHtcXHJcXG4gICAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtaGVhZGluZyk7XFxyXFxufVxcclxcblxcclxcbmEge1xcclxcbiAgICBjb2xvcjogdmFyKC0tcHJpbWFyeS1jb2xvcik7XFxyXFxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgLyogUmVtb3ZlIHVuZGVybGluZXMgZnJvbSBsaW5rcyAqL1xcclxcbn1cXHJcXG4gIC8qIE1haW4gQ29udGVudCBTdHlsZXMgKi9cXHJcXG4gICNtYWluLWNvbnRlbnQge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgfVxcclxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIGlmICghdXJsKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuICB1cmwgPSBTdHJpbmcodXJsLl9fZXNNb2R1bGUgPyB1cmwuZGVmYXVsdCA6IHVybCk7XG5cbiAgLy8gSWYgdXJsIGlzIGFscmVhZHkgd3JhcHBlZCBpbiBxdW90ZXMsIHJlbW92ZSB0aGVtXG4gIGlmICgvXlsnXCJdLipbJ1wiXSQvLnRlc3QodXJsKSkge1xuICAgIHVybCA9IHVybC5zbGljZSgxLCAtMSk7XG4gIH1cbiAgaWYgKG9wdGlvbnMuaGFzaCkge1xuICAgIHVybCArPSBvcHRpb25zLmhhc2g7XG4gIH1cblxuICAvLyBTaG91bGQgdXJsIGJlIHdyYXBwZWQ/XG4gIC8vIFNlZSBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXZhbHVlcy0zLyN1cmxzXG4gIGlmICgvW1wiJygpIFxcdFxcbl18KCUyMCkvLnRlc3QodXJsKSB8fCBvcHRpb25zLm5lZWRRdW90ZXMpIHtcbiAgICByZXR1cm4gXCJcXFwiXCIuY29uY2F0KHVybC5yZXBsYWNlKC9cIi9nLCAnXFxcXFwiJykucmVwbGFjZSgvXFxuL2csIFwiXFxcXG5cIiksIFwiXFxcIlwiKTtcbiAgfVxuICByZXR1cm4gdXJsO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBfX3dlYnBhY2tfbW9kdWxlc19fO1xuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIi9cIjsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmIgPSBkb2N1bWVudC5iYXNlVVJJIHx8IHNlbGYubG9jYXRpb24uaHJlZjtcblxuLy8gb2JqZWN0IHRvIHN0b3JlIGxvYWRlZCBhbmQgbG9hZGluZyBjaHVua3Ncbi8vIHVuZGVmaW5lZCA9IGNodW5rIG5vdCBsb2FkZWQsIG51bGwgPSBjaHVuayBwcmVsb2FkZWQvcHJlZmV0Y2hlZFxuLy8gW3Jlc29sdmUsIHJlamVjdCwgUHJvbWlzZV0gPSBjaHVuayBsb2FkaW5nLCAwID0gY2h1bmsgbG9hZGVkXG52YXIgaW5zdGFsbGVkQ2h1bmtzID0ge1xuXHQ1NzogMFxufTtcblxuLy8gbm8gY2h1bmsgb24gZGVtYW5kIGxvYWRpbmdcblxuLy8gbm8gcHJlZmV0Y2hpbmdcblxuLy8gbm8gcHJlbG9hZGVkXG5cbi8vIG5vIEhNUlxuXG4vLyBubyBITVIgbWFuaWZlc3RcblxuLy8gbm8gb24gY2h1bmtzIGxvYWRlZFxuXG4vLyBubyBqc29ucCBmdW5jdGlvbiIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL0hvbWVQYWdlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vSG9tZVBhZ2UuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IGNyZWF0ZUhvbWVQYWdlIGZyb20gJy4vY29tcG9uZW50cy9Ib21lUGFnZS9Ib21lUGFnZS5qcyc7XHJcbmltcG9ydCBjcmVhdGVBYm91dCBmcm9tICcuL2NvbXBvbmVudHMvQWJvdXQvQWJvdXQuanMnO1xyXG5pbXBvcnQgY3JlYXRlQ29udGFjdCBmcm9tICcuL2NvbXBvbmVudHMvQ29udGFjdC9Db250YWN0LmpzJztcclxuaW1wb3J0IGNyZWF0ZU1lbnUgZnJvbSAnLi9jb21wb25lbnRzL01lbnUvTWVudS5qcyc7XHJcbmNvbnN0IHN0YXRlID0ge1xyXG4gICAgYWN0aXZlVGFiOiAwLFxyXG4gICAgdGFiczogW1xyXG4gICAgICB7XHJcbiAgICAgICAgaWQ6IDAsXHJcbiAgICAgICAgbmFtZTogJ0hvbWUnLFxyXG4gICAgICAgIGFjdGl2ZTogdHJ1ZSxcclxuICAgICAgICBjb250ZW50OiBjcmVhdGVIb21lUGFnZVxyXG4gICAgICB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgaWQ6IDEsXHJcbiAgICAgICAgbmFtZTogJ0Fib3V0JyxcclxuICAgICAgICBhY3RpdmU6IGZhbHNlLFxyXG4gICAgICAgIGNvbnRlbnQ6IGNyZWF0ZUFib3V0XHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBpZDogMixcclxuICAgICAgICBuYW1lOiAnQ29udGFjdCcsXHJcbiAgICAgICAgYWN0aXZlOiBmYWxzZSxcclxuICAgICAgICBjb250ZW50OiBjcmVhdGVDb250YWN0XHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBpZDogMyxcclxuICAgICAgICBuYW1lOiAnTWVudScsXHJcbiAgICAgICAgYWN0aXZlOiBmYWxzZSxcclxuICAgICAgICBjb250ZW50OiBjcmVhdGVNZW51XHJcbiAgICAgIH1cclxuICAgIF1cclxuICB9O1xyXG4gIFxyXG4gIC8vIEZ1bmN0aW9uIHRvIGdldCBzdGF0ZVxyXG4gIGNvbnN0IGdldFN0YXRlID0gKCkgPT4gc3RhdGU7XHJcbiAgXHJcbiAgLy8gRnVuY3Rpb24gdG8gc2V0IHN0YXRlXHJcbiAgY29uc3Qgc2V0U3RhdGUgPSAobmV3U3RhdGUpID0+IHtcclxuICAgIE9iamVjdC5rZXlzKG5ld1N0YXRlKS5mb3JFYWNoKGtleSA9PiB7XHJcbiAgICAgIGlmIChzdGF0ZS5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XHJcbiAgICAgICAgc3RhdGVba2V5XSA9IG5ld1N0YXRlW2tleV07XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIC8vIFVwZGF0ZSBhY3RpdmVUYWIgaW4gdGhlIHN0YXRlXHJcbiAgICBpZiAobmV3U3RhdGUuaGFzT3duUHJvcGVydHkoJ2FjdGl2ZVRhYicpKSB7XHJcbiAgICAgICAgY29uc3QgbmV3QWN0aXZlVGFiSWQgPSBuZXdTdGF0ZS5hY3RpdmVUYWI7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gVXBkYXRlIGFjdGl2ZVRhYiBpbiB0aGUgc3RhdGVcclxuICAgICAgICBzdGF0ZS5hY3RpdmVUYWIgPSBuZXdBY3RpdmVUYWJJZDtcclxuICAgICAgICBcclxuICAgICAgICAvLyBVcGRhdGUgdGhlIGFjdGl2ZSBzdGF0dXMgb2YgYWxsIHRhYnNcclxuICAgICAgICBzdGF0ZS50YWJzLmZvckVhY2godGFiID0+IHtcclxuICAgICAgICAgIHRhYi5hY3RpdmUgPSAodGFiLmlkID09PSBuZXdBY3RpdmVUYWJJZCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICB9O1xyXG5cclxuICBmdW5jdGlvbiBhY3RpdmF0ZVRhYihuZXdUYWJJZCkge1xyXG4gICAgc2V0U3RhdGUoeyBhY3RpdmVUYWI6IG5ld1RhYklkIH0pO1xyXG4gICAgcmVuZGVyVGFicygpO1xyXG4gICAgcmVuZGVyQ29udGVudCgpO1xyXG4gIH1cclxuICBcclxuICAvLyBGdW5jdGlvbiB0byByZW5kZXIgdGFicyB3aXRoIHRoZSBhY3RpdmUgY2xhc3MgYmFzZWQgb24gdGhlIGN1cnJlbnQgc3RhdGVcclxuICBmdW5jdGlvbiByZW5kZXJUYWJzKCkge1xyXG4gICAgY29uc3QgeyB0YWJzLCBhY3RpdmVUYWIgfSA9IGdldFN0YXRlKCk7XHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcudGFiLWJ1dHRvbicpLmZvckVhY2goKGJ1dHRvbiwgaW5kZXgpID0+IHtcclxuICAgICAgaWYgKHRhYnNbaW5kZXhdLmlkID09PSBhY3RpdmVUYWIpIHtcclxuICAgICAgICBidXR0b24uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgYnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcbiAgXHJcbiAgLy8gRnVuY3Rpb24gdG8gcmVuZGVyIHRoZSBjb250ZW50IGZvciB0aGUgYWN0aXZlIHRhYlxyXG4gIGZ1bmN0aW9uIHJlbmRlckNvbnRlbnQoKSB7XHJcbiAgICBsZXQgbWFpbkNvbnRlbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFpbi1jb250ZW50Jyk7XHJcbiAgICAvLyBJZiBtYWluQ29udGVudCBkb2Vzbid0IGV4aXN0LCBjcmVhdGUgYW5kIGFwcGVuZCBpdFxyXG4gICAgaWYgKCFtYWluQ29udGVudCkge1xyXG4gICAgICAgIG1haW5Db250ZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgbWFpbkNvbnRlbnQuaWQgPSAnbWFpbi1jb250ZW50JztcclxuICAgICAgICBtYWluQ29udGVudC5jbGFzc0xpc3QuYWRkKCdtYWluLWNvbnRlbnQnKTtcclxuICAgICAgICBhcHAuYXBwZW5kQ2hpbGQobWFpbkNvbnRlbnQpO1xyXG4gICAgfVxyXG4gICAgLy8gVXBkYXRlIGNvbnRlbnRcclxuICAgIGNvbnN0IHsgdGFicywgYWN0aXZlVGFiIH0gPSBnZXRTdGF0ZSgpO1xyXG4gICAgY29uc3QgYWN0aXZlVGFiQ29udGVudCA9IHRhYnNbYWN0aXZlVGFiXS5jb250ZW50O1xyXG4gICAgbWFpbkNvbnRlbnQuaW5uZXJIVE1MID0gJyc7IC8vIENsZWFyIGV4aXN0aW5nIGNvbnRlbnRcclxuICAgIG1haW5Db250ZW50LmFwcGVuZENoaWxkKGFjdGl2ZVRhYkNvbnRlbnQoKSk7IC8vIFVwZGF0ZSB3aXRoIG5ldyBjb250ZW50XHJcbn1cclxuXHJcblxyXG4gIGV4cG9ydCB7IGdldFN0YXRlLCBzZXRTdGF0ZSwgYWN0aXZhdGVUYWIsIHJlbmRlclRhYnMsIHJlbmRlckNvbnRlbnQgfTtcclxuICAiLCJpbXBvcnQgJy4vSG9tZVBhZ2UuY3NzJztcclxuaW1wb3J0IHJlc3RhdXJhbnRJbWFnZSBmcm9tICcuLi8uLi9hc3NldHMvcmVzdGF1cmFudC5qcGcnO1xyXG5cclxuZnVuY3Rpb24gY3JlYXRlSG9tZVBhZ2UoKSB7XHJcbiAgICBjb25zdCBob21lUGFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgaG9tZVBhZ2UuY2xhc3NMaXN0LmFkZCgnaG9tZXBhZ2UnKTtcclxuICAgIGhvbWVQYWdlLnN0eWxlLmJhY2tncm91bmRJbWFnZSA9IGB1cmwoJHtyZXN0YXVyYW50SW1hZ2V9KWA7XHJcblxyXG4gICAgY29uc3QgaGVhZGluZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gxJyk7XHJcbiAgICBoZWFkaW5nLnRleHRDb250ZW50ID0gJ1dlbGNvbWUgdG8gT3VyIFJlc3RhdXJhbnQnO1xyXG5cclxuICAgIGhvbWVQYWdlLmFwcGVuZENoaWxkKGhlYWRpbmcpO1xyXG5cclxuICAgIHJldHVybiBob21lUGFnZTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlSG9tZVBhZ2U7XHJcbiIsImV4cG9ydCBkZWZhdWx0IFwiYXNzZXRzL3Jlc3RhdXJhbnQuanBnXCI7IiwiZnVuY3Rpb24gY3JlYXRlQWJvdXQoKSB7XHJcbiAgICBjb25zdCBhYm91dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgYWJvdXQuY2xhc3NMaXN0LmFkZCgnYWJvdXQnKTsgICBcclxuXHJcbiAgICBjb25zdCBhYm91dFRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XHJcbiAgICBhYm91dFRleHQudGV4dENvbnRlbnQgPSAnQWJvdXQgdXMgYXQ6IDEyMy00NTYtNzg5MCc7XHJcblxyXG4gICAgYWJvdXQuYXBwZW5kQ2hpbGQoYWJvdXRUZXh0KTtcclxuXHJcbiAgICByZXR1cm4gYWJvdXQ7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUFib3V0IiwiXHJcbmZ1bmN0aW9uIGNyZWF0ZUNvbnRhY3QoKSB7XHJcbiAgICBjb25zdCBjb250YWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBjb250YWN0LmNsYXNzTGlzdC5hZGQoJ2NvbnRhY3QnKTtcclxuXHJcbiAgICBjb25zdCBjb250YWN0VGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcclxuICAgIGNvbnRhY3RUZXh0LnRleHRDb250ZW50ID0gJ0NvbnRhY3QgdXMgYXQ6IDEyMy00NTYtNzg5MCc7XHJcblxyXG4gICAgY29udGFjdC5hcHBlbmRDaGlsZChjb250YWN0VGV4dCk7XHJcblxyXG4gICAgcmV0dXJuIGNvbnRhY3Q7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUNvbnRhY3QiLCJcclxuZnVuY3Rpb24gY3JlYXRlTWVudSgpIHtcclxuICAgICAgICBjb25zdCBtZW51ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgbWVudS5jbGFzc0xpc3QuYWRkKCdtZW51Jyk7XHJcbiAgICAgICAgbWVudS50ZXh0Q29udGVudCA9ICdNZW51JztcclxuICAgICAgICByZXR1cm4gbWVudTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgZXhwb3J0IGRlZmF1bHQgY3JlYXRlTWVudTsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vSGVhZGVyLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vSGVhZGVyLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9Gb290ZXIuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9Gb290ZXIuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2dsb2JhbC5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2dsb2JhbC5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgY3JlYXRlSGVhZGVyIGZyb20gJy4vY29tcG9uZW50cy9IZWFkZXIvSGVhZGVyLmpzJztcclxuaW1wb3J0IGNyZWF0ZUZvb3RlciBmcm9tICcuL2NvbXBvbmVudHMvRm9vdGVyL0Zvb3Rlci5qcyc7XHJcbmltcG9ydCB7IGFjdGl2YXRlVGFiLCBnZXRTdGF0ZSB9IGZyb20gJy4vc3RvcmUuanMnO1xyXG5pbXBvcnQgJy4vZ2xvYmFsLmNzcyc7XHJcblxyXG4vLyBHZXQgdGhlIGFwcCBlbGVtZW50XHJcbmNvbnN0IGFwcCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhcHAnKTtcclxuXHJcbi8vIEZ1bmN0aW9uIHRvIGluaXRpYWxpemUgdGhlIGFwcFxyXG5mdW5jdGlvbiBpbml0aWFsaXplQXBwKCkge1xyXG4gIGFwcC5pbm5lckhUTUwgPSAnJzsgLy8gQ2xlYXIgdGhlIGFwcCB0byByZS1pbml0aWFsaXplIGlmIG5lZWRlZFxyXG4gIGFwcC5hcHBlbmRDaGlsZChjcmVhdGVIZWFkZXIoKSk7IC8vIEFwcGVuZCB0aGUgaGVhZGVyIHRvIHRoZSBhcHBcclxuICAvLyBJbml0aWFsaXplIG1haW4gY29udGVudCBmb3IgdGhlIGZpcnN0IHRpbWUgb3Igb24gYXBwIHJlLWluaXRpYWxpemF0aW9uXHJcbiAgYWN0aXZhdGVUYWIoZ2V0U3RhdGUoKS5hY3RpdmVUYWIpOyAvLyBBY3RpdmF0ZSB0aGUgZGVmYXVsdCBvciBjdXJyZW50IHRhYlxyXG4gIGFwcC5hcHBlbmRDaGlsZChjcmVhdGVGb290ZXIoKSk7IC8vIEFwcGVuZCB0aGUgZm9vdGVyIHRvIHRoZSBhcHBcclxufVxyXG5cclxuLy8gQ2FsbCB0aGUgZnVuY3Rpb24gdG8gaW5pdGlhbGl6ZSB0aGUgYXBwXHJcbmluaXRpYWxpemVBcHAoKTsiLCJpbXBvcnQgeyBnZXRTdGF0ZSwgc2V0U3RhdGUscmVuZGVyVGFicywgcmVuZGVyQ29udGVudCB9IGZyb20gJy4uLy4uL3N0b3JlLmpzJztcclxuaW1wb3J0ICcuL0hlYWRlci5jc3MnOyBcclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZUhlYWRlcigpIHtcclxuICAgIGNvbnN0IHsgdGFicyB9ID0gZ2V0U3RhdGUoKTtcclxuICAgIGNvbnN0IGhlYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2hlYWRlcicpO1xyXG4gICAgaGVhZGVyLmNsYXNzTGlzdC5hZGQoJ2hlYWRlcicpO1xyXG5cclxuICAgIGNvbnN0IG5hdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ25hdicpO1xyXG4gICAgbmF2LmNsYXNzTGlzdC5hZGQoJ25hdi10YWJzJyk7XHJcblxyXG4gICAgdGFicy5mb3JFYWNoKHRhYiA9PiB7XHJcbiAgICAgIGNvbnN0IGJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xyXG4gICAgICBidXR0b24udGV4dENvbnRlbnQgPSB0YWIubmFtZTtcclxuICAgICAgYnV0dG9uLmNsYXNzTGlzdC5hZGQoJ3RhYi1idXR0b24nKTsgXHJcbiAgICAgIGlmICh0YWIuYWN0aXZlKSBidXR0b24uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XHJcbiAgICAgIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgICAgIHNldFN0YXRlKHsgYWN0aXZlVGFiOiB0YWIuaWQgfSk7XHJcbiAgICAgICAgICByZW5kZXJUYWJzKCk7XHJcbiAgICAgICAgICByZW5kZXJDb250ZW50KCk7XHJcbiAgICAgIH0pO1xyXG4gICAgICBuYXYuYXBwZW5kQ2hpbGQoYnV0dG9uKTtcclxuICB9KTtcclxuXHJcbiAgICBoZWFkZXIuYXBwZW5kQ2hpbGQobmF2KTtcclxuICAgIHJldHVybiBoZWFkZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUhlYWRlcjtcclxuIiwiaW1wb3J0ICcuL0Zvb3Rlci5jc3MnO1xyXG5cclxuLyoqXHJcbiAqIENyZWF0ZXMgYSBmb290ZXIgZWxlbWVudCB3aXRoIGNvcHlyaWdodCB0ZXh0LlxyXG4gKlxyXG4gKiBAcmV0dXJuIHtFbGVtZW50fSBUaGUgY3JlYXRlZCBmb290ZXIgZWxlbWVudC5cclxuICovXHJcbmZ1bmN0aW9uIGNyZWF0ZUZvb3RlcigpIHtcclxuICAgIGNvbnN0IGZvb3RlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2Zvb3RlcicpO1xyXG4gICAgZm9vdGVyLmNsYXNzTGlzdC5hZGQoJ2Zvb3RlcicpO1xyXG5cclxuICAgIGNvbnN0IGZvb3RlclRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XHJcbiAgICBmb290ZXJUZXh0LnRleHRDb250ZW50ID0gJ8KpIDIwMjQgUmVzdGF1cmFudCBQYWdlLiBBbGwgcmlnaHRzIHJlc2VydmVkLic7XHJcblxyXG4gICAgZm9vdGVyLmFwcGVuZENoaWxkKGZvb3RlclRleHQpO1xyXG5cclxuICAgIHJldHVybiBmb290ZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUZvb3RlcjsiXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyIsIlVSTCIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX18iLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJ1cmwiLCJvcHRpb25zIiwiU3RyaW5nIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJ0ZXN0Iiwic2xpY2UiLCJoYXNoIiwibmVlZFF1b3RlcyIsInJlcGxhY2UiLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJtIiwibiIsImdldHRlciIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwicCIsImIiLCJiYXNlVVJJIiwic2VsZiIsImxvY2F0aW9uIiwiaHJlZiIsIm5jIiwibG9jYWxzIiwic3RhdGUiLCJhY3RpdmVUYWIiLCJ0YWJzIiwibmFtZSIsImFjdGl2ZSIsImhvbWVQYWdlIiwiY2xhc3NMaXN0IiwiYWRkIiwiYmFja2dyb3VuZEltYWdlIiwiaGVhZGluZyIsInRleHRDb250ZW50IiwiYWJvdXQiLCJhYm91dFRleHQiLCJjb250YWN0IiwiY29udGFjdFRleHQiLCJtZW51IiwiZ2V0U3RhdGUiLCJzZXRTdGF0ZSIsIm5ld1N0YXRlIiwia2V5cyIsImZvckVhY2giLCJuZXdBY3RpdmVUYWJJZCIsInRhYiIsInJlbmRlclRhYnMiLCJfZ2V0U3RhdGUiLCJxdWVyeVNlbGVjdG9yQWxsIiwiYnV0dG9uIiwicmVuZGVyQ29udGVudCIsIm1haW5Db250ZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJhcHAiLCJfZ2V0U3RhdGUyIiwiYWN0aXZlVGFiQ29udGVudCIsImlubmVySFRNTCIsIm5ld1RhYklkIiwiaGVhZGVyIiwibmF2IiwiYWRkRXZlbnRMaXN0ZW5lciIsImNyZWF0ZUhlYWRlciIsImZvb3RlciIsImZvb3RlclRleHQiLCJjcmVhdGVGb290ZXIiXSwic291cmNlUm9vdCI6IiJ9